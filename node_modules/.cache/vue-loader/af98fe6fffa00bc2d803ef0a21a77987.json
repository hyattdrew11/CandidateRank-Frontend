{"remainingRequest":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Admin-Dashboard/admin/setup/importData.vue?vue&type=style&index=0&id=4287cf2c&scoped=true&lang=scss&","dependencies":[{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Admin-Dashboard/admin/setup/importData.vue","mtime":1594692551098},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNmaWxlcy1jb250YWluZXIsICNpbXBvcnRlci1jb250YWluZXIgewogIG1pbi1oZWlnaHQ6IDYzdmg7CiAgaGVpZ2h0OiA2M3ZoOwogIG92ZXJmbG93LXk6IHNjcm9sbDsKfQo="},{"version":3,"sources":["importData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyZA;AACA;AACA;AACA;AACA","file":"importData.vue","sourceRoot":"src/components/Admin-Dashboard/admin/setup","sourcesContent":["<template>\n\t<div class=\"container-fluid\">  \n    <i id=\"loader\" v-if=\"loading\" class=\"fa fa-spinner fa-pulse fa-3x fa-fw text-info\" ></i>\n\n\t\t<b-row :class=\"{fade : loading }\">\n      <b-col sm=\"9\">\n        <label class=\"tx-12 wt-600 dark-gray fw\">Choose View:</label>\n         <b-form-group label=\"\" class=\"\">\n          <b-form-radio-group\n            v-model=\"viewSelected\"\n            :options=\"viewOptions\"\n            name=\"radio-options\"\n          ></b-form-radio-group>\n        </b-form-group>\n      </b-col>\n\n      <b-col sm=\"3\">\n        <label class=\"tx-12 wt-600 dark-gray fw\">&nbsp;</label>\n         <b-button \n            class=\"mr-1 float-right\"\n            variant=\"primary\"\n            size=\"sm\"\n            >Save & Contine\n          </b-button>\n      </b-col>\n      <b-col sm=\"12\"><hr /></b-col>\n    </b-row>\n\n    <b-row :class=\"{'d-none' :  viewSelected != 'Import Files'}\">\n       <b-col sm=\"12\" md=\"5\" lg=\"5\">\n        <b-card id=\"files-container\">\n          <label class=\"tx-12 wt-600 dark-gray fw\">Files {{ this.currentTerm.year }}</label>\n          <p v-if=\"this.year == null\" class=\"tx-12 text-center\">please select an interview year</p>\n          <b-form-input v-if=\"year\" size=\"sm\" v-model=\"fsearch\" placeholder=\"search my files\" class=\"mb-2\"></b-form-input>\n          <div v-if=\"ZIPS.length > 0\">\n            Zips\n            <i class=\"fa fa-caret-down gray pointer float-right\" v-b-toggle.collapse-zips variant=\"primary\"></i>\n            <hr />\n            <b-collapse id=\"collapse-zips\" visible class=\"mt-2 file-collapse\">\n              <div v-for=\"(x, index) in ZIPS\">\n                <p class=\"mb-1\">\n                  <i class=\"fa fa-file-archive-o mr-1 gray\" ></i>\n                  <a :href=\"x.url\" class=\"file\">{{ x.name }}</a>\n                  <i class=\"fa fa-times-circle float-right pointer red\" @click=\"deleteFile(index, x, 'ZIPS')\"   v-b-tooltip.hover title=\"Delete\"></i>\n                </p>\n              </div>\n            </b-collapse>\n          </div>\n\n          <div v-if=\"CSVS.length > 0\">\n            CSVs\n            <i class=\"fa fa-caret-down pointer float-right\" v-b-toggle.collapse-csvs variant=\"primary\"></i>\n            <hr />\n            <b-collapse id=\"collapse-csvs\" visible class=\"mt-2 file-collapse\">\n              <div v-for=\"(x, index) in CSVS\">\n                 <p class=\"mb-1\">\n                  <i class=\"fa fa-file-excel-o mr-1 gray\"></i>\n                  <a :href=\"x.url\" class=\"file\">{{ x.name }}</a>\n                  <i class=\"fa fa-times-circle float-right pointer red\" @click=\"deleteFile(index, x, 'CSVS')\"  v-b-tooltip.hover title=\"Delete\"></i>\n                </p>\n              </div>\n            </b-collapse>\n\n            <hr />\n          </div>\n\n          <div v-if=\"PDFS.length > 0\">\n            PDFs\n            <i class=\"fa fa-caret-down pointer float-right\" v-b-toggle.collapse-pdfs variant=\"primary\"></i>\n            <hr />\n            <b-collapse id=\"collapse-pdfs\" visible  class=\"mt-2 file-collapse\">\n              <div v-for=\"(x, index) in PDFS\">\n                 <p class=\"mb-1\">\n                  <i class=\"fa fa-file-pdf-o mr-1 gray\" ></i>\n                  <a :href=\"x.url\" class=\"file\">{{ x.name }}</a>\n                  <i class=\"fa fa-times-circle float-right pointer red\" @click=\"deleteFile(index, x , 'PDFS')\"   v-b-tooltip.hover title=\"Delete\"></i>\n                </p>\n              </div>\n            </b-collapse>\n          </div>\n        </b-card>\n      </b-col>\n\n      <b-col sm=\"12\" md=\"7\" lg=\"7\">\n          <vue-dropzone \n            ref=\"myVueDropzone\" \n            id=\"dropzone\" \n            :include-styling=\"true\"\n            @vdropzone-file-added=\"vfileAdded\"\n            @vdropzone-files-added=\"vfilesAdded\"\n            @vdropzone-success=\"vsuccess\"\n            @vdropzone-upload-progress=\"vlogProgress\"\n            v-on:vdropzone-sending=\"sendingEvent\"\n            :options=\"dropzoneOptions\"\n            :useCustomSlot=\"true\"\n            :duplicateCheck=\"true\"\n          >\n            <div class=\"dropzone-custom-content mt-2 text-center\">\n              <span class=\"fa-stack fa-2x\">\n                <i class=\"fa fa-circle fa-stack-2x light-gray\"></i>\n                <i class=\"fa fa-upload fa-stack-1x white\"></i>\n              </span>\n                <p class=\"text-center tx-14 wt-500 mb-0\">Drag and drop files you want to upload.</p>\n                <p class=\"tx-10 text-center mb-0\">ZIP, CSV, and PDF only.</p>\n                <span class=\"btn btn-primary btn-sm mt-1\">Select File</span>\n            </div>\n          </vue-dropzone>\n      </b-col>\n    </b-row>\n\n    <b-row :class=\"{'d-none' :  viewSelected != 'Filter Candidates'}\">\n     <b-col sm=\"12\" md=\"12\" lg=\"12\">\n      <b-card>\n        <b-button size=\"sm\" class=\"add-btn mr-1\" variant=\"secondary\">All Candidates</b-button>\n        <b-button size=\"sm\" class=\"add-btn mr-1\" variant=\"primary\">Chosen Candidates</b-button>\n        <span class=\"float-right tx-12 wt-500 gray ml-2 pointer\" @click=\"refreshTerm()\">\n          <i class=\"fa fa-sync\"></i>\n        </span>\n        <span class=\"float-right tx-12 wt-500 gray\">{{ candidates.length }} Candidates</span>\n        <hr />\n        <ag-grid-vue\n          id=\"grid\"\n          style=\"width: 100%; height: 500px;\"\n          class=\"ag-theme-material\"\n          :gridOptions=\"gridOptions\"\n          :columnDefs=\"columnDefs\"\n          :rowData=\"rowData\"\n          :animateRows=\"true\"\n          @onGridReady=\"onGridReady\"\n          :context=\"context\"\n          :frameworkComponents=\"frameworkComponents\"\n        >\n        </ag-grid-vue>\n      </b-card>\n     </b-col>\n    </b-row>\n\t</div>\n</template>\n\n<script>\nimport axios from 'axios'\nconst currentYear = (new Date()).getFullYear();\nconst API_URL = process.env.VUE_APP_API_URL\nconst S3_BUCKET = process.env.VUE_APP_S3_BUCKET\n\nimport vue2Dropzone from 'vue2-dropzone'\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\nconst csv = require('csvtojson')\n\n\nimport { AgGridVue } from 'ag-grid-vue';\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\n\nimport {fields} from './fields'\nimport photoRender from \"./photoRender\";\n\nexport default {\n\tname: 'importData',\n  props: [\"organization\",\"user\",\"candidates\",\"surveys\",\"faculty\",\"currentTerm\", \"files\"],\n  watch: {\n    organization: function(newVal, oldVal) {\n      if(newVal) {\n        this.organization = newVal\n      }\n    },\n    currentTerm: function(newVal, oldVal) {\n      if(newVal) {\n        this.year = newVal.year\n      }\n    },\n    files: function(newVal, oldVal) {\n      if(newVal) {\n        this.files = newVal\n      }\n    },\n    candidates: function(newVal, oldVal) {\n      if(newVal) {\n        this.candidates = newVal\n        this.rowData = newVal\n      }\n    }\n  },\n\tdata() {\n    \treturn {\n        fsearch: '',\n        csearch: '',\n        showDropZone: false,\n        loading: false,\n        fields:['Date', 'File Name', 'Upload Progress'],\n        imports :[],\n        file: null,\n        fileAdded: null,\n        year: this.currentTerm.year,\n        header: null,\n        stagedCandidates: [],\n        showResults: false,\n        results: [],\n        viewSelected: 'Import Files',\n        viewOptions: ['Import Files', 'Filter Candidates'],\n        dropzoneOptions: {\n          url: API_URL+'/dashboard/admin/upload',\n          autoProcessQueue: true,\n          autoQueue: true,\n          parallelUploads: 10,\n          uploadMultiple: false,\n          createImageThumbnails: false,\n          addRemoveLinks: true,\n          timeout: 360000, //milliseconds\n          maxFilesize: 10000,\n          chunking: true,\n          forceChunking: true,\n          chunkSize: 2000000,\n          uploadMultiple: false,\n          acceptedFiles: 'application/pdf, text/csv, application/zip'\n        },\n        gridOptions: null,\n        gridApi: null,\n        columnApi: null,\n        rowSelection: \"single\",\n        context: null,\n        frameworkComponents: null,\n        paginationNumberFormatter: null,\n        paginationPageSize: 100,\n        columnDefs: fields,\n        rowData: this.candidates\n      }\n  \t},\n\tcomponents: {\n    \tvueDropzone: vue2Dropzone,\n      AgGridVue: AgGridVue,\n      photoRender\n  \t},\n  computed: {\n   priorYears() {\n        let x\n        let terms = this.organization.terms\n        let years = []\n        for(x in terms) { \n          years.push(terms[x].year) }\n        return years\n    },\n    checkHeader() {\n      return this.header\n    },\n    CSVS: {\n      get() { \n        let files = this.sortedFiles.filter(i => i.name.includes('.csv'));\n        return files\n      },\n      set: function(newValue) {\n         let files = newValue.filter(i => i.name.includes('.csv'));\n        return files\n      }\n    },\n    PDFS: {\n      get() {\n        let files = this.sortedFiles.filter(i => i.name.includes('.pdf'));\n        return files\n      },\n      set: function(newValue) {\n        console.log(newValue)\n        let files = newValue.filter(i => i.name.includes('.pdf'));\n        return files\n      }\n    },\n    ZIPS: {\n      get() {\n        let files = this.sortedFiles.filter(i => i.name.includes('.zip'));\n        return files\n      },\n      set: function(newValue) {\n        let files = newValue.filter(i => i.name.includes('.zip'));\n        return files\n      }\n    },\n    sortedCustodians: {\n        get () {\n          /* \n          COMPUTED PROPERTY IS CONNECTED TO THE SEARCH TEXT BOX IN THE COMPONENT\n          ALLOWS USERS TO SEARCH THEIR MATTERS AND ASSIGNMENTS\n          */\n          if(this.candidates.length > 0) {\n            return this.candidates\n              ? this.candidates.filter(item => \n                item['Last Name'].toLowerCase().includes( this.csearch.toLowerCase() )\n                ||\n                item['First Name'].toLowerCase().includes(this.csearch.toLowerCase())\n                )\n              : this.candidates\n            }\n            else {\n              let arr = []\n              return arr\n            }\n        },\n        set () {\n          this.candidates.sort(function(a, b) {\n              if(a['First Name'] < b['First Name']) { return -1 }\n              if(a['Last Name'] > b['Last Name']) { return 1  }\n              return 0\n            })\n        }\n      },\n    sortedFiles: {\n      get () {\n         let year = this.currentTerm.year\n         if(this.files.length > 0) {\n            return this.files\n              ? this.files.filter(item => item.year.includes(year) && item.name.toLowerCase().includes(this.fsearch.toLowerCase()))\n              : this.files\n            }\n            else {\n              let arr = []\n              return arr\n            }\n      },\n      set() {\n        let year = this.currentTerm.year\n        if(year != undefined) {\n          return this.files\n              ? this.files.filter(item => item.year.includes(year) )\n              : this.files\n        }\n        else {\n          let f = []\n          return f\n        }\n      }\n    }\n  },\n  beforeMount() {\n      this.gridOptions = {\n                defaultColDef: { sortable: true},\n      }\n      this.gridOptions.rowHeight = 150;\n      this.columnDefs = fields\n      this.context = { componentParent: this }\n      this.frameworkComponents = { \n              \"photoRender\": photoRender\n      };\n  },\n  mounted() {\n      this.gridApi = this.gridOptions.api\n      this.gridColumnApi = this.gridOptions.columnApi\n      this.gridApi.sizeColumnsToFit();\n  },\n  methods: {\n      refreshTerm() {\n         this.$emit('changeTerm', this.currentTerm)\n      },\n      deleteFile(index, file, farray) {\n        let vm = this\n        let fs = this.files.findIndex(i => i.path.includes(file.path));\n\n        let c = confirm(\"Delete \" + file.name + \"?\")\n        if(c) {\n          let input = {\n            path: file.path\n          }\n          axios.post( API_URL+'/dashboard/admin/file/delete',  input)\n            .then(({data}) => { \n              console.log(data)\n              this.files.splice(fs, 1)\n              this.loading = false\n            })\n            .catch(function (e) { \n              vm.loading = false\n              alert(e) \n            })\n         }\n         else {\n            this.loading = false\n         }\n      },\n      vfileAdded(file) {\n         this.$refs.myVueDropzone.processQueue(file)\n      },\n      vfilesAdded(file) {\n         this.$refs.myVueDropzone.processQueue(file)\n      },\n      sendingEvent (file, xhr, formData) {\n         formData.append('organization', this.organization.name);\n         formData.append('year', this.year);\n      },\n      vsuccess(file, response) {\n        let newFile = {\n          name: file.name,\n          path: S3_BUCKET+'/'+this.organization.name+'/'+this.year+'/'+file.name,\n          url: 'null',\n          year: this.year.toString(),\n        }\n        this.files.push(newFile)\n      },\n      vlogProgress(file, progress, bytesSent) {\n      },\n      onGridReady(params) {\n      params.api.sizeColumnsToFit();\n      window.addEventListener(\"resize\", function() {\n            setTimeout(function() {\n              params.api.sizeColumnsToFit()\n            })\n          })  \n      }\n    }\n};\n</script>\n<style scoped lang=\"scss\">\n#files-container, #importer-container {\n  min-height: 63vh;\n  height: 63vh;\n  overflow-y: scroll;\n}\n</style>"]}]}