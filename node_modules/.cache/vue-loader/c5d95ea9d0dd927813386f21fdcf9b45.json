{"remainingRequest":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Admin-Dashboard/admin/setup/welcomeWizard.vue?vue&type=style&index=0&id=2f0d7842&scoped=true&lang=scss&","dependencies":[{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Admin-Dashboard/admin/setup/welcomeWizard.vue","mtime":1594674447904},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogICNQcmVJbnRlcnZpZXdSYW5raW5ncyB0aCB7CiAgZm9udC1zaXplOiAxMHB4Owp9CiAjUHJlSW50ZXJ2aWV3UmFua2luZ3MgdGQgewogIGZvbnQtc2l6ZTogMTJweDsKICBwYWRkaW5nOiA1cHggMTVweCA1cHggMTVweDsKICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwp9CiNQcmVJbnRlcnZpZXdSYW5raW5ncyB0ZDpudGgtY2hpbGQoMikgIHsKICBtYXgtd2lkdGg6IDIwMHB4OwogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKfQovLyAudGQtaW50IHsKLy8gICAgbWF4LXdpZHRoOiA4MHB4OwovLyB9CiNQcmVJbnRlcnZpZXdSYW5raW5ncyB0ZDpsYXN0LWNoaWxkIHsKICAgd2lkdGg6IDMwMHB4Owp9Ci5wcm9maWxlLXNtIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgYm9yZGVyLXJhZGl1czogMTAwJTsKICBoZWlnaHQ6IDM1cHg7CiAgd2lkdGg6ICBhdXRvOwogIG1hcmdpbi1yaWdodDogMTBweDsKfQo="},{"version":3,"sources":["welcomeWizard.vue"],"names":[],"mappingsuiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"welcomeWizard.vue","sourceRoot":"src/components/Admin-Dashboard/admin/setup","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <b-row no-gutters>\n       <div :class=\"{'d-none' : selected != null}\" class=\"fw\">\n         <b-row>\n           <b-col sm=\"12\" lg=\"12\">\n            <label class=\"tx-18 wt-600 dark-gray\">Welcome to Canadidate Rank - Would you like to start a new application year or review prior years results?</label>\n            <br />\n              <b-button size=\"sm\" variant=\"info\"  @click=\"newYear()\" class=\"mr-1\">Start New Year</b-button> \n              <!-- <b-button size=\"sm\" variant=\"secondary\"  @click=\"priorYear()\" class=\"mr-1\">Prior Year</b-button>  -->\n              <hr />\n            </b-col>\n             <b-col v-if=\"organization.terms\" sm=\"12\" md=\"4\" class=\"mt-2\">\n              <div  v-for=\"(x, index) in organization.terms\">\n                <b-card\n                  :header=\"'Department - ' + x.department\"\n                  header-text-variant=\"white\"\n                  header-bg-variant=\"secondary\"\n                >\n                <p class=\"mb-0\">Interview Year: {{ x.year }}</p>\n                <p class=\"mb-0\">Pre-Interview Completion Date: {{ x.PIdate }}</p>\n                <p class=\"mb-0\">{{ x.dates.length }} interview dates</p>\n                <p class=\"mb-0\">{{ x.faculty.length }} evaluators</p>\n                <b-button size=\"sm\" class=\"action-btn\" @click=\"priorYear(index)\" variant=\"secondary\">Edit</b-button>\n                </b-card>\n              </div>\n             </b-col>\n          </b-row>\n      </div>\n      <div :class=\"{'d-none' : selected != 'first'}\" class=\"fw\">\n        <b-row>\n          <b-col sm=\"2\">\n            <h5 class=\"pointer tx-18 wt-600 dark-gray\" @click=\"restartWizard('new')\">\n              <i class=\"fa fa-caret-left\"></i> Exit\n            </h5>\n          </b-col>\n          <b-col sm=\"8\" class=\"text-center pt-1\">\n            <h5 class=\"tx-18 wt-600 dark-gray\">New Interview Year Setup {{ year }}</h5>\n          </b-col>\n\n          <b-col sm=\"2\" class=\"text-right\">\n            <b-button size=\"sm\" variant=\"primary\" @click=\"updateOrganization()\">Save & Continue</b-button> \n          </b-col>\n\n          <b-col sm=\"12\"><hr /></b-col>\n\n           <b-col sm=\"4\">\n            <label class=\"tx-12 wt-600 dark-gray\">Choose New Interview Year:</label>\n            <b-form-select v-model=\"year\" :options=\"years\" @change=\"checkYear(year)\"></b-form-select>\n          </b-col>\n           <b-col sm=\"4\">\n              <label class=\"tx-12 wt-600 dark-gray\">Department Name:</label>\n              <b-input-group>\n                 <b-form-input v-model=\"currentTerm.department\" placeholder=\"\"></b-form-input>\n              </b-input-group>\n          </b-col>\n\n          <b-col sm=\"4\">\n            <label class=\"tx-12 wt-600 dark-gray\">Pre-Interview Completion Date:</label>\n            <b-form-datepicker v-model=\"PIdate\" @input=\"changePIDate(PIdate, false)\"></b-form-datepicker>\n          </b-col>\n          <b-col sm=\"12\"><hr /></b-col>\n          <b-col sm=\"4\" class=\"text-center\">\n             <p>Now, choose your interview date(s)</p>\n               <b-calendar \n                id=\"interview-date-select\" \n                v-model=\"yearMin\" \n                @selected=\"onContext\" \n                locale=\"en-US\"\n                selected-variant=\"success\" \n                today-variant=\"info\"\n                :min=\"yearMin\" \n                :max=\"yearMax\"\n                ></b-calendar>\n          </b-col>\n          <b-col sm=\"4\">\n            <b-card style=\"min-height: 55vh;\">\n              <p>\n                Interview Dates\n                 <hr />\n              </p>\n              <span class=\"underbar bg-gray\"></span>\n              <p v-for=\"(x, index) in interviewDates\" class=\"date\">\n                {{ x.startDate }}\n\n                 <i\n                  @click=\"removeDateNew(x, index)\"\n                  v-b-tooltip.hover title=\"Remove Date\" \n                  class=\"fa fa-minus-circle pointer red float-right mr-2\">\n                </i>\n\n              </p>\n            </b-card>\n          </b-col>\n          <b-col sm=\"4\">\n              <b-card style=\"min-height: 55vh;\">\n              <p>\n                Evaluators\n                <b-button size=\"sm\" variant=\"primary\" class=\"float-right\" v-b-modal.modal-1>New User</b-button>\n                <b-modal id=\"modal-1\" title=\"Add New User\" no-footer>\n                  <label>email</label>\n                  <b-form-input v-model=\"newUser.email\" placeholder=\"email\"></b-form-input>\n                   <label>Temporary password:</label>\n                  <b-form-input v-model=\"newUser.password\" placeholder=\"password\"></b-form-input>\n                </b-modal>\n                <hr />\n              </p>\n               <span class=\"underbar bg-gray\"></span>\n              <p v-for=\"(x, index) in faculty\" class=\"date\">\n                  {{ x.email }}\n                 <i\n                  @click=\"removeUserNew(x, index)\"\n                  v-b-tooltip.hover title=\"Remove from term\" \n                  class=\"fa fa-minus-circle pointer red float-right mr-1\">\n                </i>\n              </p>\n            </b-card>\n          </b-col>\n        </b-row>\n      </div>\n      <div :class=\"{'d-none' : selected != 'second'}\" class=\"fw\">\n        <b-row>\n          <b-col sm=\"2\">\n            <h5 class=\"pointer tx-18 wt-600 dark-gray\" @click=\"restartWizard('prior')\">\n              <i class=\"fa fa-caret-left\"></i> Exit\n            </h5>\n          </b-col>\n          <b-col sm=\"8\" class=\"text-center pt-1\">\n            <h5 class=\"tx-18 wt-600 dark-gray\">Prior Year Setup {{ year }}</h5>\n          </b-col>\n          <b-col sm=\"2\" class=\"text-right\">\n            <b-button size=\"sm\" variant=\"primary\" @click=\"updatePrior()\">Save & Continue</b-button> \n          </b-col>\n          <b-col sm=\"12\"><hr /></b-col>\n\n           <b-col sm=\"4\">\n            <label class=\"tx-12 wt-600 dark-gray\">Choose Previous or Ongoing Interview Year:</label>\n            <b-form-select v-model=\"year\" :options=\"priorYears\" @change=\"loadTerm(year)\"></b-form-select>\n          </b-col>\n           <b-col sm=\"4\">\n              <label class=\"tx-12 wt-600 dark-gray\">Department Name:</label>\n              <b-input-group>\n                 <b-form-input v-model=\"currentTerm.department\" placeholder=\"\"></b-form-input>\n              </b-input-group>\n          </b-col>\n          <b-col sm=\"4\">\n            <label class=\"tx-12 wt-600 dark-gray\">Pre-Interview Completion Date:</label>\n            <b-form-datepicker v-model=\"currentTerm.PIdate\" @input=\"changePIDate(PIdate, true)\"></b-form-datepicker>\n          </b-col>\n          <b-col sm=\"12\"><hr /></b-col>\n          <b-col sm=\"4\" class=\"text-center\">\n             <p>Now, choose your interview date(s)</p>\n               <b-calendar \n                id=\"interview-date-select\" \n                v-model=\"yearMin\" \n                @selected=\"onContextPrior\" \n                locale=\"en-US\"\n                selected-variant=\"success\" \n                today-variant=\"info\"\n                :min=\"yearMin\" \n                :max=\"yearMax\"\n                ></b-calendar>\n          </b-col>\n          <b-col sm=\"4\">\n            <b-card style=\"min-height: 55vh;\">\n              <p>\n                Interview Dates\n                 <hr />\n              </p>\n              <span class=\"underbar bg-gray\"></span>\n              <p v-for=\"(x, index) in currentTerm.dates\" class=\"date\">\n                  {{ x.startDate }}\n\n                 <i\n                  @click=\"removeDate(x, index)\"\n                  v-b-tooltip.hover title=\"Remove Date\" \n                  class=\"fa fa-minus-circle pointer red float-right mr-2\">\n                </i>\n\n\n              </p>\n            </b-card>\n          </b-col>\n          <b-col sm=\"4\">\n              <b-card style=\"min-height: 55vh;\">\n              <p>\n                Evaluators\n                <b-button size=\"sm\" variant=\"primary\" class=\"float-right\" v-b-modal.modal-1>New User</b-button>\n                <hr />\n              </p>\n               <span class=\"underbar bg-gray\"></span>\n              <p v-for=\"(x, index) in currentTerm.faculty\" class=\"date\">\n                  {{ x.email }}\n                 <i\n                  @click=\"removeUser(x, index)\"\n                  v-b-tooltip.hover title=\"Remove from term\" \n                  class=\"fa fa-minus-circle pointer red float-right mr-1\">\n                </i>\n              </p>\n            </b-card>\n          </b-col>\n        </b-row>\n      </div>\n    </b-row>  \t\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n// USE JS DATE FUNCTION TO GET ARRAY OF YEARS\nconst currentYear = (new Date()).getFullYear();\nconst range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (_, i) => start + (i * step));\nconst API_URL = process.env.VUE_APP_API_URL\n\nexport default {\n\tname: 'welcomeWizard',\n  props: [\"organization\",\"user\",\"candidates\",\"surveys\",\"faculty\", \"currentTerm\"],\n  watch: {\n    organization: function(newVal, oldVal) {\n      if(newVal) {\n        this.organization = newVal\n      }\n    },\n    currentTerm: function(newVal, oldVal) {\n      if(newVal) {\n        this.year = newVal.year\n        let x\n        let terms = this.organization.terms\n        let term\n        for(x in terms) { \n          if(terms[x].year == this.year) {\n            term = this.organization.terms[x]\n            this.interviewDates = terms[x].dates\n          }\n        }\n      }\n    }\n  },\n\tdata() {\n    \treturn {\n        PIdate: null,\n        text: null,\n        newestTerm: null,\n        departmentName: '...',\n        newUser: {\n          email: null,\n          password: null,\n        },\n        selected: null,\n        options: [\n          { text: 'Start new year', value: 'first' },\n          { text: 'Review Prior year results', value: 'second' },\n        ],\n        year: this.currentTerm.year,\n        years: range(currentYear + 10 , currentYear - 10, -1),\n        date: '',\n        interviewDates: [],\n        savedDates: [],\n        context: null,\n        fields : [\n          {\n             'name':'Rank',\n             'order': null,\n           },\n           {\n              'name' : 'Name', \n              'order': null,\n            },\n            {\n              'name': 'Interview',\n              'order': null,\n            },\n            {\n              'name':'Pre-Interview Survey',\n              'order': null,\n            },\n            {\n              'name':'Interview Survey', \n              'order': null,\n            },\n            {\n              'name':'Application',\n              'order': null,\n            }\n          ],\n      }\n  \t},\n    computed: {\n      yearMin: {\n        get: function() {\n          let min = this.year + '-01-01'\n          return min\n        },\n        set: function(newValue) {\n          let min = newValue + '-01-01'\n          return min\n        }\n      },\n      yearMax: {\n        get: function() {\n          let min = this.year + '-12-31'\n          return min\n        },\n        set: function(newValue) {\n          let min = newValue + '-12-31'\n          return min\n        }\n      },\n      newTerm() {\n        let x = {\n          \"year\"  : this.year,\n          \"dates\" : this.interviewDates,\n          \"name\"  : this.text \n        }\n        return x\n      },\n      priorYears() {\n        let x\n        let terms = this.organization.terms\n        let years = []\n        for(x in terms) { \n          years.push(terms[x].year) \n        }\n        return years\n      },\n    },  \n  \tcomponents: {\n      axios\n    },\n    mounted() {},\n  \tmethods: { \n      changePIDate(date, priorYear) {\n        if(priorYear == true) {\n          this.currentTerm.PIdate = date\n        }\n        else {}\n      },\n      loadTerm(year) {\n        this.year = year\n        let x\n        let terms = this.organization.terms\n        for(x in terms) {       \n          if(terms[x].year == year) {\n            let term = this.organization.terms[x]\n            this.$emit('changeTerm', term)\n          }\n        }\n      },\n      newYear() {\n        this.selected = 'first'\n        let term  = {\n            dates: [],\n            department: '',\n            faculty: this.faculty,\n            year: null\n        }\n        this.$emit('changeTerm', term)\n      },\n      priorYear(index) {\n          this.$emit('changeTerm', this.organization.terms[index])\n          this.selected = 'second'\n      },\n      updatePrior() {\n        let x \n        let terms = this.organization.terms\n        if(this.currentTerm.department.length == 0 || this.currentTerm.department == '') { \n          alert(\"Please enter a department name.\")\n        }\n        else if(this.currentTerm.dates.length == 0) {\n          alert(\"Please add at least one interview date\")\n        }\n        else if(this.currentTerm.faculty.length == 0 ) {\n          alert(\"Please add at least one evaluator\")\n        }\n        else {\n          for(x in terms) { \n            if(terms[x].year == this.currentTerm.year) {\n              this.organization.terms[x] = this.currentTerm\n            }\n          }\n          // AXIOS UPDATE THE ORGANIZATION VIA API\n          axios.post(API_URL+'/organization/update/terms/'+this.organization.name, this.organization)\n          .then(({data}) => { \n            this.$emit(\"update:organization\", data)\n            let c = confirm(\"Term updated. Move to next step?\")\n            if(c) {\n              this.$emit('nextStep', this.currentTerm)\n            }\n            else {}\n          })\n          .catch(function (e) { alert(e) })\n        }\n      },\n      updateOrganization() {\n        let x \n        let faculty = this.faculty\n        for(x in faculty) {\n          faculty[x].dates = []\n        }\n        let term = {\n            year: this.year,\n            dates: this.interviewDates,\n            faculty: faculty,\n            department: this.currentTerm.department,\n            status: 'Inactive',\n            PIdate: this.PIdate,\n            rooms: [],\n            interviewLength: 15,\n            interviewStartTime: 0,\n            interviewEndTime: 0,\n            breaks: [],\n        }\n        if(this.currentTerm.department.length == 0 || this.currentTerm.department == '') { \n          alert(\"Please enter a department name.\")\n        }\n        else if(this.interviewDates.length == 0) {\n          alert(\"Please add at least one interview date\")\n        }\n        else if(faculty.length == 0 ) {\n          alert(\"Please add at least one evaluator\")\n        }\n        else {\n          this.organization.terms.push(term)\n          // AXIOS UPDATE THE ORGANIZATION VIA API\n          axios.post(API_URL+'/organization/update/terms/'+this.organization.name, this.organization)\n            .then(({data}) => { \n              let c = confirm(\"Term saved successfully. Move to next step?\")\n              // this.$emit(\"update:organization\", data)\n              if(c) {\n                this.$emit('nextStep', term)\n              }\n              else {}\n            })\n            .catch(function (e) { alert(e) })\n        }\n      },\n      previewFiles(event) {},\n      restartWizard(type) {\n        this.selected = null\n        let  term = {\n            dates: [],\n            faculty: null,\n            department: null,\n            year: null\n        }\n        this.$emit('changeTerm', term)\n      },\n      checkYear(year) {\n        console.log(\"CHECK YEAR: \"+year)\n        let x\n        let terms = this.organization.terms\n        let check = false\n        let term\n        for(x in terms) {\n          if(terms[x].year == year) { \n            term = terms[x]\n            check = true \n          }\n        }\n        if(check) {\n          let c = confirm(\"You already have started setup for this year. Would you like to edit this year's setup?\")\n          if(c) { \n            this.$emit('changeTerm', term)\n            this.selected = 'second' \n          }\n          else  { this.selected = null }\n        }\n        else {\n          term  = {\n            dates: [],\n            department: '',\n            faculty: this.faculty,\n            year: year\n          }\n          this.interviewDates = []\n          this.$emit('changeTerm', term)\n        }\n      },\n      removeDate(x, index) {\n         this.currentTerm.dates.splice(index, 1)\n      },\n      removeDateNew(x, index) {\n         this.interviewDates.splice(index, 1)\n      },\n      removeUserNew(x, index) {\n        this.faculty.splice(index, 1)\n      },\n      removeUser(x, index) {\n        this.currentTerm.faculty.splice(index, 1)\n      },\n      removeSavedDate(x, index) {\n        this.savedDates.splice(index, 1)\n      },\n      onContext(ymd, date) {\n        // console.log(ymd, date)\n        // let dates =  this.interviewDates\n        // if( dates.includes(ymd) ) {\n        //   alert(\"Date Already Selected\")\n        // }\n        // else {\n        //   this.interviewDates.push(ymd)\n        // }\n         let day = {}\n        console.log(ymd)\n        let dates =  this.interviewDates\n        if( dates.includes(ymd) ) {\n          alert(\"Date Already Selected\")\n        }\n        else {\n          day.startDate = ymd\n          day.endDate = ymd\n          day.events = []\n          day.rooms = []\n          this.interviewDates.push(day)\n        }\n      },\n      onContextPrior(ymd, date) {\n        let day = {}\n        console.log(ymd)\n        let dates =  this.currentTerm.dates\n        if( dates.includes(ymd) ) {\n          alert(\"Date Already Selected\")\n        }\n        else {\n          day.startDate = ymd\n          day.endDate = ymd\n          day.events = []\n          day.rooms = []\n          this.currentTerm.dates.push(day)\n        }\n      },\n       getCandidates(year) {\n          this.$Progress.start()\n          let org = this.user.Organization\n          axios.get(API_URL+'/candidate/all/'+org+'/'+year)\n          .then(({ data }) => {\n            let x \n            for(x in data) {\n              this.candidates.push(data[x])\n            }\n            this.$Progress.finish()\n          })\n          .catch(function (e) {\n              this.$Progress.fail()\n              alert('Error loading search candidates, please refresh.')\n          })\n      },\n    }\n};\n</script>\n<style scoped lang=\"scss\">\n    #PreInterviewRankings th {\n    font-size: 10px;\n  }\n   #PreInterviewRankings td {\n    font-size: 12px;\n    padding: 5px 15px 5px 15px;\n    vertical-align: middle;\n  }\n  #PreInterviewRankings td:nth-child(2)  {\n    max-width: 200px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  // .td-int {\n  //    max-width: 80px;\n  // }\n  #PreInterviewRankings td:last-child {\n     width: 300px;\n  }\n  .profile-sm {\n    display: inline-block;\n    border-radius: 100%;\n    height: 35px;\n    width:  auto;\n    margin-right: 10px;\n  }\n</style>"]}]}