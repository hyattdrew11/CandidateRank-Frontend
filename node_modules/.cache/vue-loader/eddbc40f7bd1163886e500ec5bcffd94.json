{"remainingRequest":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Dashboard/admin/setup/evaluatorsManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Dashboard/admin/setup/evaluatorsManagement.vue","mtime":1585797706000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGN1cnJlbnRZZWFyID0gKG5ldyBEYXRlKCkpLmdldEZ1bGxZZWFyKCk7CmNvbnN0IHJhbmdlID0gKHN0YXJ0LCBzdG9wLCBzdGVwKSA9PiBBcnJheS5mcm9tKHsgbGVuZ3RoOiAoc3RvcCAtIHN0YXJ0KSAvIHN0ZXAgKyAxfSwgKF8sIGkpID0+IHN0YXJ0ICsgKGkgKiBzdGVwKSk7CgpleHBvcnQgZGVmYXVsdCB7CgluYW1lOiAnZXZhbHVhdG9yc01hbmFnZW1lbnQnLAogIHByb3BzOiBbIm9yZ2FuaXphdGlvbiIsInVzZXIiLCJjYW5kaWRhdGVzIiwic3VydmV5cyIsImZhY3VsdHkiXSwKICB3YXRjaDogewogICAgb3JnYW5pemF0aW9uOiBmdW5jdGlvbihuZXdWYWwsIG9sZFZhbCkgewogICAgICBpZihuZXdWYWwpIHsKICAgICAgICB0aGlzLm9yZ2FuaXphdGlvbiA9IG5ld1ZhbAogICAgICB9CiAgICB9CiAgfSwKCWRhdGEoKSB7CiAgICAJcmV0dXJuIHsKICAgICAgICB5ZWFyOiBjdXJyZW50WWVhciwKICAgICAgICBmaWVsZHM6WydUaXRsZScsICdMYXN0IE5hbWUnLCAnRmlyc3QgTmFtZScsICdGYWN1bHR5IOKAoiBSZXNpZGVudCcsICdQaG9uZScsICdlbWFpbCcsICdBdmFpbGFiaWxpdHknLCAnUHJlLUludGVydmlldyddLAogICAgICAgIG9wdGlvbnM6IFt0cnVlICwgZmFsc2VdLAogICAgICAgIGludGVydmlld0RhdGVzOiBbXSwKICAgICAgICB0ZXJtOiBudWxsLAogICAgICB9CiAgCX0sCiAgICBjb21wdXRlZDogewogICAgICAgcHJpb3JZZWFycygpIHsKICAgICAgICBsZXQgeAogICAgICAgIGxldCB0ZXJtcyA9IHRoaXMub3JnYW5pemF0aW9uLnRlcm1zCiAgICAgICAgbGV0IHllYXJzID0gW10KICAgICAgICBmb3IoeCBpbiB0ZXJtcykgeyAKICAgICAgICAgIHllYXJzLnB1c2godGVybXNbeF0ueWVhcikgfQogICAgICAgIHJldHVybiB5ZWFycwogICAgICB9LAogICAgfSwKICAJbWV0aG9kczogewogICAgICB1cGRhdGVJbnRlcnZpZXdEYXRlcyh0ZXJtKSB7CiAgICAgICAgdGhpcy5pbnRlcnZpZXdEYXRlcyA9IFtdCiAgICAgICAgbGV0IHgKICAgICAgICBsZXQgdGVybXMgPSB0aGlzLm9yZ2FuaXphdGlvbi50ZXJtcwogICAgICAgIGZvcih4IGluIHRlcm1zKSB7CiAgICAgICAgICBpZih0ZXJtc1t4XS55ZWFyID09IHRlcm0pIHsKICAgICAgICAgICAgdGhpcy5pbnRlcnZpZXdEYXRlcyA9IHRlcm1zW3hdLmRhdGVzCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICBjaGFuZ2VUYWIodGFiKSB7CiAgICAgICAgdGhpcy50YWIgPSB0YWIKICAgICAgfSwKICAgICAgc2F2ZVdpemFyZCgpIHsKICAgICAgICB0aGlzLiRyZWZzWydlbSddLmFjdGl2YXRlKCkKICAgICAgfSwKICAgICAgc2F2ZURhdGUoeCAsIGluZGV4KSB7CiAgICAgICAgdGhpcy5zYXZlZERhdGVzLnB1c2goeCkKICAgICAgICB0aGlzLmludGVydmlld0RhdGVzLnNwbGljZShpbmRleCwgMSkKICAgICAgfSwKICAgICAgcmVtb3ZlRGF0ZSh4LCBpbmRleCkgewogICAgICAgIHRoaXMuaW50ZXJ2aWV3RGF0ZXMuc3BsaWNlKGluZGV4LCAxKQogICAgICB9LAogICAgICByZW1vdmVTYXZlZERhdGUoeCwgaW5kZXgpIHsKICAgICAgICB0aGlzLnNhdmVkRGF0ZXMuc3BsaWNlKGluZGV4LCAxKQogICAgICB9LAogICAgICBvbkNvbnRleHQoY3R4KSB7CiAgICAgICAgaWYoY3R4LnNlbGVjdGVkRGF0ZSA9PSBudWxsKSB7CiAgICAgICAgICB0aGlzLmNvbnRleHQgPSBjdHgKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICB0aGlzLmNvbnRleHQgPSBjdHgKICAgICAgICAgIHRoaXMuaW50ZXJ2aWV3RGF0ZXMucHVzaChjdHgpCiAgICAgICAgfQogICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"sources":["evaluatorsManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"evaluatorsManagement.vue","sourceRoot":"src/components/Dashboard/admin/setup","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n   <b-row>\n      <b-col sm=\"9\">\n        <!--   <i class=\"fa fa-plus-circle pointer green mr-2\"></i>\n          Click to add a new evaluator -->\n      </b-col>\n      <b-col sm=\"4\">\n              <b-form-group label=\"Survey Year:\" >\n                <b-form-select v-model=\"term\" :options=\"priorYears\" @change=\"updateInterviewDates(term)\"></b-form-select>\n              </b-form-group>\n            </b-col>\n      <b-col sm=\"12\"><hr /></b-col>\n      <b-col sm=\"9\">\n        <table id=\"evaluatorTable\" class=\"table table-bordered table-hover\">\n       <thead>\n          <tr>\n            <th v-for=\"(x, index) in fields\" scope=\"col\">\n              {{ x }} \n                <i v-if=\" x.order == null\" class=\"fa fa-sort float-right gray\"></i>\n                <i v-if=\" x.order == 'asc'\" class=\"fa fa-caret-up float-right\"></i>\n                <i v-if=\" x.order == 'desc'\" class=\"fa fa-caret-down float-right\"></i>\n            </th>\n          </tr>\n        </thead>\n         <tbody>\n          <tr v-for=\"(x, index) in faculty\">\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td>{{ x.email }}</td>\n              <td></td>\n              <td>\n                <b-form-radio-group\n                  v-model=\"x.preinterview\"\n                  :options=\"options\"\n                  name=\"radio-options\"\n                ></b-form-radio-group>\n              </td>\n          </tr>\n\n\n\n\n        </tbody>\n      </table>\n      </b-col>\n      <b-col sm=\"3\">\n        Interview Dates\n        <br /> _\n          <p v-for=\"(x, index) in interviewDates\" class=\"date\">\n                {{ x.selectedFormatted }}\n\n                 <i\n                  @click=\"removeDate(x, index)\"\n                  v-b-tooltip.hover title=\"Remove Date\" \n                  class=\"fa fa-minus-circle pointer red float-right mr-2\">\n                </i>\n\n                 <i\n                  @click=\"removeDate(x, index)\"\n                  v-b-tooltip.hover title=\"Remove Date\" \n                  class=\"fa fa-lock pointer gray float-right mr-2\">\n                </i>\n\n              </p>\n      </b-col>\n       <b-col sm=\"12\">\n          <hr />\n        </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nconst currentYear = (new Date()).getFullYear();\nconst range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (_, i) => start + (i * step));\n\nexport default {\n\tname: 'evaluatorsManagement',\n  props: [\"organization\",\"user\",\"candidates\",\"surveys\",\"faculty\"],\n  watch: {\n    organization: function(newVal, oldVal) {\n      if(newVal) {\n        this.organization = newVal\n      }\n    }\n  },\n\tdata() {\n    \treturn {\n        year: currentYear,\n        fields:['Title', 'Last Name', 'First Name', 'Faculty â€¢ Resident', 'Phone', 'email', 'Availability', 'Pre-Interview'],\n        options: [true , false],\n        interviewDates: [],\n        term: null,\n      }\n  \t},\n    computed: {\n       priorYears() {\n        let x\n        let terms = this.organization.terms\n        let years = []\n        for(x in terms) { \n          years.push(terms[x].year) }\n        return years\n      },\n    },\n  \tmethods: {\n      updateInterviewDates(term) {\n        this.interviewDates = []\n        let x\n        let terms = this.organization.terms\n        for(x in terms) {\n          if(terms[x].year == term) {\n            this.interviewDates = terms[x].dates\n          }\n        }\n      },\n      changeTab(tab) {\n        this.tab = tab\n      },\n      saveWizard() {\n        this.$refs['em'].activate()\n      },\n      saveDate(x , index) {\n        this.savedDates.push(x)\n        this.interviewDates.splice(index, 1)\n      },\n      removeDate(x, index) {\n        this.interviewDates.splice(index, 1)\n      },\n      removeSavedDate(x, index) {\n        this.savedDates.splice(index, 1)\n      },\n      onContext(ctx) {\n        if(ctx.selectedDate == null) {\n          this.context = ctx\n        }\n        else {\n          this.context = ctx\n          this.interviewDates.push(ctx)\n        }\n      }\n    }\n};\n</script>\n<style scoped lang=\"scss\">\n    #evaluatorTable th {\n    font-size: 10px;\n  }\n   #evaluatorTable td {\n    font-size: 12px;\n    padding: 5px 15px 5px 15px;\n    vertical-align: middle;\n  }\n  #evaluatorTable td:nth-child(2)  {\n    max-width: 200px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  #evaluatorTable td:last-child {\n     width: 300px;\n  }\n</style>"]}]}