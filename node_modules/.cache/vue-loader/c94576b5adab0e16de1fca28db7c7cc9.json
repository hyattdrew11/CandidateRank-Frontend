{"remainingRequest":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Admin-Dashboard/admin/setup/surveyManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Admin-Dashboard/admin/setup/surveyManagement.vue","mtime":1594691874791},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IGRyYWdnYWJsZSBmcm9tICJ2dWVkcmFnZ2FibGUiOwovLyBVU0UgSlMgREFURSBGVU5DVElPTiBUTyBHRVQgQVJSQVkgT0YgWUVBUlMKY29uc3QgY3VycmVudFllYXIgPSAobmV3IERhdGUoKSkuZ2V0RnVsbFllYXIoKTsKY29uc3QgcmFuZ2UgPSAoc3RhcnQsIHN0b3AsIHN0ZXApID0+IEFycmF5LmZyb20oeyBsZW5ndGg6IChzdG9wIC0gc3RhcnQpIC8gc3RlcCArIDF9LCAoXywgaSkgPT4gc3RhcnQgKyAoaSAqIHN0ZXApKQpjb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElfVVJMCgpleHBvcnQgZGVmYXVsdCB7CgluYW1lOiAnc3VydmV5TWFuYWdlbWVudCcsCiAgcHJvcHM6IFsib3JnYW5pemF0aW9uIiwidXNlciIsImNhbmRpZGF0ZXMiLCJzdXJ2ZXlzIiwiZmFjdWx0eSIsICJjdXJyZW50VGVybSJdLAogIHdhdGNoOiB7CiAgICBzdXJ2ZXlzOiBmdW5jdGlvbihuZXdWYWwsIG9sZFZhbCkgeyAKICAgICAgIGlmKG5ld1ZhbCkgeyAKICAgICAgICB0aGlzLnN1cnZleXMgPSBuZXdWYWwKICAgICAgIH0KICAgIH0sCiAgICBvcmdhbml6YXRpb246IGZ1bmN0aW9uKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGlmKG5ld1ZhbCkgewogICAgICAgIHRoaXMub3JnYW5pemF0aW9uID0gbmV3VmFsCiAgICAgICAgbGV0IHgKICAgICAgICBsZXQgdGVybXMgPSB0aGlzLm9yZ2FuaXphdGlvbi50ZXJtcwogICAgICAgIGlmKHRlcm1zLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGxldCB5cnMgPSBbXQogICAgICAgICAgZm9yKHggaW4gdGVybXMpIHsgeXJzLnB1c2godGVybXNbeF0ueWVhcikgfQogICAgICAgICAgbGV0IG1heCA9IHlycy5yZWR1Y2UoZnVuY3Rpb24oYSwgYikgewogICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoYSwgYik7CiAgICAgICAgICB9KQogICAgICAgICAgdGhpcy5uZXdlc3RUZXJtID0gbWF4CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgdGhpcy5uZXdlc3RUZXJtID0gKGN1cnJlbnRZZWFyICsgMSkKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIG9yZGVyOiAwLAogIGNvbXBvbmVudHM6IHsKICAgIGRyYWdnYWJsZSwKICAgIGF4aW9zCiAgfSwKCWRhdGEoKSB7CiAgICAJcmV0dXJuIHsKICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgIGRyYWdnaW5nOiBmYWxzZSwKICAgICAgICBzdXJ2ZXlOYW1lOiBudWxsLAogICAgICAgIHN1cnZleVR5cGU6IG51bGwsCiAgICAgICAgc3VydmV5VGVybTogbnVsbCwKICAgICAgICBzdXJ2ZXlUZXJtczogcmFuZ2UoY3VycmVudFllYXIsIGN1cnJlbnRZZWFyIC0gNTAsIC0xKSwKICAgICAgICBzdXJ2ZXlUeXBlcyA6IFsnUHJlLUludGVydmlldycsICdJbnRlcnZpZXcnLCAnQ2FuZGlkYXRlIFBvc3QgSW50ZXJ2aWV3IFNhdGlzZmFjdGlvbiddLAogICAgICAgIHNlbGVjdGVkOiBudWxsLAogICAgICAgIG9wdGlvbnM6IFsKICAgICAgICAgIHsgdGV4dDogJ0NyZWF0ZSBOZXcgc3VydmV5JywgdmFsdWU6ICduZXcnIH0sCiAgICAgICAgICB7IHRleHQ6ICdIaXN0b3JpY2FsIFN1cnZleXMnLCB2YWx1ZTogJ2hpc3RvcmljYWwnIH0sCiAgICAgICAgXSwKICAgICAgICBxdWVzdGlvbnM6IFtdLAogICAgICAgIHN1cnZleTogbnVsbCwKICAgICAgfQogIAl9LAogIGNvbXB1dGVkOiB7CiAgICBwcmlvclllYXJzKCkgewogICAgICAgIGxldCB4CiAgICAgICAgbGV0IHRlcm1zID0gdGhpcy5vcmdhbml6YXRpb24udGVybXMKICAgICAgICBsZXQgeWVhcnMgPSBbXQogICAgICAgIGZvcih4IGluIHRlcm1zKSB7IAogICAgICAgICAgeWVhcnMucHVzaCh0ZXJtc1t4XS55ZWFyKSB9CiAgICAgICAgcmV0dXJuIHllYXJzCiAgICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBuZXdTdXJ2ZXkoKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWQgPSAnbmV3JwogICAgICB0aGlzLnN1cnZleSA9IHsKICAgICAgICBPcmdhbml6YXRpb246IHRoaXMub3JnYW5pemF0aW9uLAogICAgICAgIGRhdGVfY3JlYXRlZDogbnVsbCwKICAgICAgICBkYXRlX21vZGlmaWVkOiBudWxsLAogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHF1ZXN0aW9uczogW10sCiAgICAgICAgdGVybTogdGhpcy5jdXJyZW50VGVybSwKICAgICAgICB0eXBlOiBudWxsLAogICAgICAgIHV1aWQ6IG51bGwKICAgICAgfQogICAgICB0aGlzLnN1cnZleVRlcm0gPSB0aGlzLmN1cnJlbnRUZXJtCiAgICAgIHRoaXMuc3VydmV5VHlwZSA9IG51bGwgIAogICAgICB0aGlzLnN1cnZleU5hbWUgPSAnJwogICAgICB0aGlzLnF1ZXN0aW9ucyAgPSBbXQogICAgfSwKICAgIGdldFN1cnZleXMoKSB7fSwKICAgIGFkZDogZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMubGlzdC5wdXNoKHsgbmFtZTogIkp1YW4gIiArIGlkLCBpZDogaWQrKyB9KTsKICAgIH0sCiAgICByZXBsYWNlOiBmdW5jdGlvbigpIHsKICAgICAgdGhpcy5saXN0ID0gW3sgbmFtZTogIkVkZ2FyZCIsIGlkOiBpZCsrIH1dOwogICAgfSwKICAgIGNoZWNrTW92ZTogZnVuY3Rpb24oZSkgewogICAgICB3aW5kb3cuY29uc29sZS5sb2coIkZ1dHVyZSBpbmRleDogIiArIGUuZHJhZ2dlZENvbnRleHQuZnV0dXJlSW5kZXgpOwogICAgfSwKICAgIGFkZFF1ZXN0aW9uKCkgewogICAgICBsZXQgeCA9IHsKICAgICAgICAgIHR5cGU6ICdSYW5nZScsCiAgICAgICAgICB0ZXh0OiAnJywKICAgICAgICAgIHByZXZpZXc6IGZhbHNlLAogICAgICAgICAgb3B0aW9uczogWzAsIDEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwXSwKICAgICAgICAgIHNlbGVjdGVkOiBudWxsLAogICAgICB9CiAgICAgIHRoaXMucXVlc3Rpb25zLnB1c2goeCkKICAgIH0sCiAgICBhZGRDb21tZW50KCkgewogICAgICAgbGV0IHggPSB7CiAgICAgICAgICB0eXBlOiAnQ29tbWVudCcsCiAgICAgICAgICB0ZXh0OiAnJywKICAgICAgICAgIHByZXZpZXc6IGZhbHNlLAogICAgICAgICAgcXVlc3Rpb246ICcnCiAgICAgIH0KICAgICAgdGhpcy5zdXJ2ZXkucXVlc3Rpb25zLnB1c2goeCkKICAgIH0sCiAgICBzYXZlU3VydmV5KCkgewogICAgICAKICAgICAgaWYodGhpcy5zdXJ2ZXlOYW1lLmxlbmd0aCA9PSAwIHx8IHRoaXMuc3VydmV5TmFtZSA9PSBudWxsKSB7CiAgICAgICAgYWxlcnQoIk5hbWUgdGhlIHN1cnZleSIpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgaWYodGhpcy5zdXJ2ZXlUeXBlID09IG51bGwpIHsgCiAgICAgICAgYWxlcnQoIkNob29zZSBhIHN1cnZleSB0eXBlIikKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICBsZXQgaW5wdXQgPSB7CiAgICAgICAgICAgIE9yZ2FuaXphdGlvbiAgOiB0aGlzLnVzZXIuT3JnYW5pemF0aW9uLAogICAgICAgICAgICB0ZXJtICAgICAgICAgIDogdGhpcy5zdXJ2ZXlUZXJtLCAgCiAgICAgICAgICAgIHR5cGUgICAgICAgICAgOiB0aGlzLnN1cnZleVR5cGUsICAKICAgICAgICAgICAgbmFtZSAgICAgICAgICA6IHRoaXMuc3VydmV5TmFtZSwKICAgICAgICAgICAgcXVlc3Rpb25zICAgICA6IHRoaXMucXVlc3Rpb25zCiAgICAgICAgICB9CiAgICAgICAgICBjb25zb2xlLmxvZyhpbnB1dCkKICAgICAgICBheGlvcy5wb3N0KEFQSV9VUkwrJy9zdXJ2ZXkvYWRkJywgaW5wdXQpCiAgICAgICAgICAudGhlbigoe2RhdGF9KSA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpCiAgICAgICAgICAgIHRoaXMuc3VydmV5cy5wdXNoKGRhdGEpCiAgICAgICAgICAgIHRoaXMuc3VydmV5ID0gewogICAgICAgICAgICAgICJPcmdhbml6YXRpb24iICA6IHRoaXMudXNlci5Pcmdhbml6YXRpb24sCiAgICAgICAgICAgICAgInRlcm0iICAgICAgICAgIDogdGhpcy5zdXJ2ZXlUZXJtLCAgCiAgICAgICAgICAgICAgInR5cGUiICAgICAgICAgIDogdGhpcy5zdXJ2ZXlUeXBlLCAgCiAgICAgICAgICAgICAgIm5hbWUiICAgICAgICAgIDogJycsCiAgICAgICAgICAgICAgInF1ZXN0aW9ucyIgICAgIDogW10KICAgICAgICAgICAgfQogICAgICAgICAgICBsZXQgY29uZiA9IGNvbmZpcm0odGhpcy5zdXJ2ZXlUeXBlICsgJzogJyAgKyB0aGlzLnN1cnZleU5hbWUgKyAiIHN1Y2Vzc2Z1bGx5IHNhdmVkIGFuZCBhY3RpdmF0ZWQuIE1vdmUgb24gdG8gbmV4dCBzdGVwLiIpCiAgICAgICAgICAgIHRoaXMucXVlc3Rpb25zID0gW10KICAgICAgICAgICAgdGhpcy5zdXJ2ZXlOYW1lID0gbnVsbAogICAgICAgICAgICBpZihjb25mKSB7CiAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnbmV4dFN0ZXAnLCB0aGlzLmN1cnJlbnRUZXJtKQogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGFsZXJ0KGUpCiAgICAgICAgICAgIC8vIGFsZXJ0KCJFcnJvciBzYXZpbmcgc3VydmV5LiIpCiAgICAgICAgICB9KQogICAgICB9CiAgICB9LAogICAgY2hvb3NlSGlzdG9yaWFsKHgpIHsKICAgICAgY29uc29sZS5sb2coeCkKICAgICAgdGhpcy5zdXJ2ZXkgPSB4CiAgICAgIHRoaXMuc3VydmV5VGVybSA9IHgudGVybQogICAgICB0aGlzLnN1cnZleVR5cGUgPSB4LnR5cGUgIAogICAgICB0aGlzLnN1cnZleU5hbWUgPSB4Lm5hbWUKICAgICAgdGhpcy5xdWVzdGlvbnMgPSB4LnF1ZXN0aW9ucwogICAgfSwKICAgIHJlbW92ZVF1ZXN0aW9uKHEsIGluZGV4KSB7CiAgICAgIC8vIEFYSU9TIEFQSSBDQUxMIFRPIERFTEVURSBUSEVOKCkKICAgICAgdGhpcy5zdXJ2ZXkucXVlc3Rpb25zLnNwbGljZShpbmRleCwgMSkKICAgIH0sCiAgICBtb3ZlUXVlc3Rpb24ocXVlc3Rpb24sIGRlc3RpbmF0aW9uKSB7CiAgICAgIGNvbnNvbGUubG9nKHF1ZXN0aW9uLCBkZXN0aW5hdGlvbikKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["surveyManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6OA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"surveyManagement.vue","sourceRoot":"src/components/Admin-Dashboard/admin/setup","sourcesContent":["<template>\n\t<div class=\"container-fluid\">  \n\t\t<b-row>\n      <b-col sm=\"9\">\n         <!-- <label class=\"tx-12 wt-600 dark-gray fw\">Choose Survey Setup:</label>\n         <b-form-group label=\"\" class=\"\">\n          <b-form-radio-group\n            v-model=\"selected\"\n            :options=\"options\"\n            name=\"radio-options\"\n          ></b-form-radio-group>\n        </b-form-group> -->\n          <label class=\"tx-12 wt-600 dark-gray fw\">Survey Management</label>\n         <b-button \n            class=\"mr-1 float-left\"\n            variant=\"success\"\n            size=\"sm\"\n            @click=\"newSurvey()\"\n            >Create New Survey\n          </b-button>\n      </b-col>\n      <b-col sm=\"3\">\n         <label class=\"tx-12 wt-600 dark-gray fw\">&nbsp;</label>\n         <b-button \n            class=\"mr-1 float-right\"\n            variant=\"primary\"\n            size=\"sm\"\n            @click=\"saveSurvey()\"\n            >Save & Contine\n          </b-button>\n      </b-col>\n      <b-col sm=\"12\"><hr /></b-col>\n\n       <b-col md=\"3\">\n          <label class=\"tx-12 wt-600 dark-gray fw\">Saved Surveys</label>\n          <b-list-group>\n            <b-list-group-item  v-for=\"(x, index) in surveys\" class=\"pointer\" @click=\"chooseHistorial(x)\">\n              <i class=\"fa fa-file dark-gray\"></i>\n              {{ x.name }}\n            </b-list-group-item>\n          </b-list-group>\n      </b-col>\n\n       <b-col sm=\"9\">\n        <b-card id=\"surveyPreview\" v-if=\"survey != null\">\n          <div>\n            <b-row>\n              <b-col sm=\"12\" class=\"\">\n              <h5>\n              {{ surveyType }} : {{ surveyName }}\n              <!-- <b-button size=\"sm\" variant=\"primary\" class=\"float-right mr-1 mt-1\">Test</b-button> -->\n              <!-- <b-button size=\"sm\" variant=\"success\" class=\"float-right mr-1 mt-1\">Activate</b-button> -->\n              <!-- <b-button size=\"sm\" variant=\"danger\" class=\"float-right mr-1 mt-1\">Delete</b-button> -->\n              <!-- {{ survey.term }} -->\n              <!-- {{ survey.date_modified }} -->\n              </h5>\n              ___\n            </b-col>\n            <b-col sm=\"4\" class=\"\">\n                 <label class=\"tx-12 wt-600 dark-gray fw\">Add comments & questions:</label>\n                 <span class=\"mr-2 btn btn-sm btn-success\" @click=\"addQuestion()\">\n                    Add Question\n                  </span>\n                  <span class=\"mr-2 btn btn-sm btn-success\" @click=\"addComment()\">\n                    Add Comment\n                  </span>\n              </b-col>\n\n              <b-col sm=\"4\">\n                <label class=\"tx-12 wt-600 dark-gray fw\">Survey Type:</label>\n                <b-form-select v-model=\"surveyType\" :options=\"surveyTypes\"></b-form-select>\n              </b-col>\n\n              <b-col sm=\"4\">\n                 <label class=\"tx-12 wt-600 dark-gray fw\">Survey Name:</label>\n                  <b-form-input\n                    v-model=\"surveyName\"\n                    type=\"text\"\n                    placeholder=\"Enter Survey Name...\"\n                  ></b-form-input>\n              </b-col>\n\n            </b-row>\n\n          </div>\n          <hr />\n\n              <draggable\n                :list=\"questions\"\n                class=\"list-group\"\n                :move=\"checkMove\"\n                @start=\"dragging = true\"\n                @end=\"dragging = false\"\n              >\n                <div v-for=\"(x, index) in questions\" :key=\"index\"  class=\"list-group-item\">\n                  <i class=\"fa fa-bars move\"></i>\n                    <div v-if=\"x.type == 'Range'\">\n                       <p class=\"question-text mb-0 p-1 tx-12 wt-600\">Question: {{ x.text }}</p>\n                      <b-form-group>\n                        <b-form-input\n                          v-model=\"x.text\"\n                          type=\"text\"\n                          placeholder=\"...\"\n                        ></b-form-input>\n                      </b-form-group>\n                      <span v-for=\"(i, index) in x.options\" class=\"mr-2\">\n                        <input type=\"radio\" disabled>\n                        <label class=\"ml-2 mr-2\">{{ index }}</label>\n                      </span>\n                       <b-button size=\"sm\" variant=\"danger\" class=\"float-right mr-1 mt-1\" @click=\"removeQuestion(x, index)\">Delete</b-button>\n                    </div>\n                    <div v-if=\"x.type == 'Comment'\">\n                      <p class=\"question-text mb-0 p-1 tx-12 wt-600\">Question: {{ x.question }}</p>\n                      <b-form-input\n                          v-model=\"x.question\"\n                          type=\"text\"\n                          placeholder=\"...\"\n                          class=\"mb-2\"\n                        ></b-form-input>\n                        <b-form-textarea\n                          :disabled=\"true\"\n                          v-model=\"x.text\"\n                          placeholder=\"Evaluator comments will go here...\"\n                          rows=\"3\"\n                          max-rows=\"6\"\n                        ></b-form-textarea>\n                        <b-button size=\"sm\" variant=\"danger\" class=\"float-right mr-1 mt-1\" @click=\"removeQuestion(x, index)\">Delete</b-button>\n                    </div>\n                </div>\n              </draggable>\n        </b-card>\n      </b-col>\n\n\n\n      <!-- <b-col v-if=\"selected == 'new' \" sm=\"12\">\n        <div id=\"newSurvey\">\n          <b-row>\n            <b-col sm=\"12\">\n              <hr />\n              <draggable\n                :list=\"questions\"\n                class=\"list-group\"\n                :move=\"checkMove\"\n                @start=\"dragging = true\"\n                @end=\"dragging = false\"\n              >\n                <div v-for=\"(x, index) in questions\" :key=\"index\"  class=\"list-group-item\">\n                  <i class=\"fa fa-bars move\"></i>\n                    <div v-if=\"x.type == 'Range'\">\n                       <p class=\"question-text mb-0 p-1 tx-12 wt-600\">Question: {{ x.text }}</p>\n                      <b-form-group>\n                        <b-form-input\n                          v-model=\"x.text\"\n                          type=\"text\"\n                          placeholder=\"...\"\n                        ></b-form-input>\n                      </b-form-group>\n                      <span v-for=\"(i, index) in x.options\" class=\"mr-2\">\n                        <input type=\"radio\" disabled>\n                        <label class=\"ml-2 mr-2\">{{ index }}</label>\n                      </span>\n                       <b-button size=\"sm\" variant=\"danger\" class=\"float-right mr-1 mt-1\" @click=\"removeQuestion(x, index)\">Delete</b-button>\n                    </div>\n                    <div v-if=\"x.type == 'Comment'\">\n                      <p class=\"question-text mb-0 p-1 tx-12 wt-600\">Question: {{ x.question }}</p>\n                      <b-form-input\n                          v-model=\"x.question\"\n                          type=\"text\"\n                          placeholder=\"...\"\n                          class=\"mb-2\"\n                        ></b-form-input>\n                        <b-form-textarea\n                          :disabled=\"true\"\n                          v-model=\"x.text\"\n                          placeholder=\"Evaluator comments will go here...\"\n                          rows=\"3\"\n                          max-rows=\"6\"\n                        ></b-form-textarea>\n                        <b-button size=\"sm\" variant=\"danger\" class=\"float-right mr-1 mt-1\" @click=\"removeQuestion(x, index)\">Delete</b-button>\n                    </div>\n                </div>\n              </draggable>\n            </b-col>\n          </b-row>\n        </div>\n      </b-col> -->\n       <b-col v-if=\"selected == 'historical' \" sm=\"4\">\n       <!--  <b-card id=\"survey-list\">\n          <label class=\"tx-12 wt-600 dark-gray fw\">Saved Surveys</label>\n          <b-list-group>\n            <b-list-group-item  v-for=\"(x, index) in surveys\" class=\"pointer\" @click=\"chooseHistorial(x)\">\n              <i class=\"fa fa-file dark-gray\"></i>\n              {{ x.name }}\n            </b-list-group-item>\n          </b-list-group>\n        </b-card> -->\n      </b-col>\n      <!-- <b-col v-if=\"selected == 'historical' \" sm=\"8\">\n        <b-card id=\"surveyPreview\" v-if=\"survey != null\">\n          <h5>\n            {{ survey.type }} : {{ survey.name }}\n            <b-button size=\"sm\" variant=\"primary\" class=\"float-right mr-1 mt-1\">Test</b-button>\n            <b-button size=\"sm\" variant=\"success\" class=\"float-right mr-1 mt-1\">Activate</b-button>\n            <b-button size=\"sm\" variant=\"danger\" class=\"float-right mr-1 mt-1\">Delete</b-button>\n            {{ survey.term }}\n            {{ survey.date_modified }}\n          </h5>\n          <hr />\n           <div v-for=\"(x, index) in survey.questions\">\n            <div v-if=\"x.type == 'Range'\" class=\"mb-1\">\n              <p class=\"question-text mb-0 p-1 tx-12 wt-600\">{{ x.text }}</p>\n              <span v-for=\"(i, index) in x.options\" class=\"mr-2\">\n                <input type=\"radio\">\n                <label class=\"ml-2 mr-2\">{{ index }}</label>\n              </span>\n              <hr />\n            </div>\n            <div v-if=\"x.type == 'Comment'\" class=\"mb-1\">\n              <p class=\"question-text mb-0 p-1 tx-12 wt-600\">{{ x.question }}</p>\n                <b-form-textarea\n                  :disabled=\"false\"\n                  v-model=\"x.text\"\n                  placeholder=\"Evaluator comments will go here...\"\n                  rows=\"3\"\n                  max-rows=\"6\"\n                ></b-form-textarea>\n                <hr />\n            </div>\n          </div>\n        </b-card>\n      </b-col> -->\n    </b-row>\n\t</div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport draggable from \"vuedraggable\";\n// USE JS DATE FUNCTION TO GET ARRAY OF YEARS\nconst currentYear = (new Date()).getFullYear();\nconst range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (_, i) => start + (i * step))\nconst API_URL = process.env.VUE_APP_API_URL\n\nexport default {\n\tname: 'surveyManagement',\n  props: [\"organization\",\"user\",\"candidates\",\"surveys\",\"faculty\", \"currentTerm\"],\n  watch: {\n    surveys: function(newVal, oldVal) { \n       if(newVal) { \n        this.surveys = newVal\n       }\n    },\n    organization: function(newVal, oldVal) {\n      if(newVal) {\n        this.organization = newVal\n        let x\n        let terms = this.organization.terms\n        if(terms.length > 0) {\n          let yrs = []\n          for(x in terms) { yrs.push(terms[x].year) }\n          let max = yrs.reduce(function(a, b) {\n            return Math.max(a, b);\n          })\n          this.newestTerm = max\n        }\n        else {\n          this.newestTerm = (currentYear + 1)\n        }\n      }\n    }\n  },\n  order: 0,\n  components: {\n    draggable,\n    axios\n  },\n\tdata() {\n    \treturn {\n        enabled: true,\n        dragging: false,\n        surveyName: null,\n        surveyType: null,\n        surveyTerm: null,\n        surveyTerms: range(currentYear, currentYear - 50, -1),\n        surveyTypes : ['Pre-Interview', 'Interview', 'Candidate Post Interview Satisfaction'],\n        selected: null,\n        options: [\n          { text: 'Create New survey', value: 'new' },\n          { text: 'Historical Surveys', value: 'historical' },\n        ],\n        questions: [],\n        survey: null,\n      }\n  \t},\n  computed: {\n    priorYears() {\n        let x\n        let terms = this.organization.terms\n        let years = []\n        for(x in terms) { \n          years.push(terms[x].year) }\n        return years\n      },\n  },\n  methods: {\n    newSurvey() {\n      this.selected = 'new'\n      this.survey = {\n        Organization: this.organization,\n        date_created: null,\n        date_modified: null,\n        name: '',\n        questions: [],\n        term: this.currentTerm,\n        type: null,\n        uuid: null\n      }\n      this.surveyTerm = this.currentTerm\n      this.surveyType = null  \n      this.surveyName = ''\n      this.questions  = []\n    },\n    getSurveys() {},\n    add: function() {\n      this.list.push({ name: \"Juan \" + id, id: id++ });\n    },\n    replace: function() {\n      this.list = [{ name: \"Edgard\", id: id++ }];\n    },\n    checkMove: function(e) {\n      window.console.log(\"Future index: \" + e.draggedContext.futureIndex);\n    },\n    addQuestion() {\n      let x = {\n          type: 'Range',\n          text: '',\n          preview: false,\n          options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n          selected: null,\n      }\n      this.questions.push(x)\n    },\n    addComment() {\n       let x = {\n          type: 'Comment',\n          text: '',\n          preview: false,\n          question: ''\n      }\n      this.survey.questions.push(x)\n    },\n    saveSurvey() {\n      \n      if(this.surveyName.length == 0 || this.surveyName == null) {\n        alert(\"Name the survey\")\n        return\n      }\n      if(this.surveyType == null) { \n        alert(\"Choose a survey type\")\n        return\n      }\n      else {\n        let input = {\n            Organization  : this.user.Organization,\n            term          : this.surveyTerm,  \n            type          : this.surveyType,  \n            name          : this.surveyName,\n            questions     : this.questions\n          }\n          console.log(input)\n        axios.post(API_URL+'/survey/add', input)\n          .then(({data}) => {\n            console.log(data)\n            this.surveys.push(data)\n            this.survey = {\n              \"Organization\"  : this.user.Organization,\n              \"term\"          : this.surveyTerm,  \n              \"type\"          : this.surveyType,  \n              \"name\"          : '',\n              \"questions\"     : []\n            }\n            let conf = confirm(this.surveyType + ': '  + this.surveyName + \" sucessfully saved and activated. Move on to next step.\")\n            this.questions = []\n            this.surveyName = null\n            if(conf) {\n              this.$emit('nextStep', this.currentTerm)\n            }\n          })\n          .catch(function (e) {\n            alert(e)\n            // alert(\"Error saving survey.\")\n          })\n      }\n    },\n    chooseHistorial(x) {\n      console.log(x)\n      this.survey = x\n      this.surveyTerm = x.term\n      this.surveyType = x.type  \n      this.surveyName = x.name\n      this.questions = x.questions\n    },\n    removeQuestion(q, index) {\n      // AXIOS API CALL TO DELETE THEN()\n      this.survey.questions.splice(index, 1)\n    },\n    moveQuestion(question, destination) {\n      console.log(question, destination)\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\">\n  .move {\n    cursor: move;\n  }\n  #survey-list {\n    min-height: 65vh;\n  }\n</style>"]}]}