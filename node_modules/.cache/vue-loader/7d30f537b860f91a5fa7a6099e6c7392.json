{"remainingRequest":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Dashboard/admin/setup/importData.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Dashboard/admin/setup/importData.vue","mtime":1587865625000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGN1cnJlbnRZZWFyID0gKG5ldyBEYXRlKCkpLmdldEZ1bGxZZWFyKCk7CmNvbnN0IEFQSV9VUkwgPSBwcm9jZXNzLmVudi5WVUVfQVBQX0FQSV9VUkwKCmltcG9ydCB2dWUyRHJvcHpvbmUgZnJvbSAndnVlMi1kcm9wem9uZScKaW1wb3J0ICd2dWUyLWRyb3B6b25lL2Rpc3QvdnVlMkRyb3B6b25lLm1pbi5jc3MnCmNvbnN0IGNzdiA9IHJlcXVpcmUoJ2NzdnRvanNvbicpCgoKCmV4cG9ydCBkZWZhdWx0IHsKCW5hbWU6ICdpbXBvcnREYXRhJywKICBwcm9wczogWyJvcmdhbml6YXRpb24iLCJ1c2VyIiwiY2FuZGlkYXRlcyIsInN1cnZleXMiLCJmYWN1bHR5Il0sCiAgd2F0Y2g6IHsKICAgIG9yZ2FuaXphdGlvbjogZnVuY3Rpb24obmV3VmFsLCBvbGRWYWwpIHsKICAgICAgaWYobmV3VmFsKSB7CiAgICAgICAgdGhpcy5vcmdhbml6YXRpb24gPSBuZXdWYWwKICAgICAgfQogICAgfQogIH0sCglkYXRhKCkgewogICAgCXJldHVybiB7CiAgICAgICAgZmllbGRzOlsnRGF0ZScsICdGaWxlIE5hbWUnLCAnVXBsb2FkIFByb2dyZXNzJ10sCiAgICAgICAgaW1wb3J0cyA6W10sCiAgICAgICAgZmlsZTogbnVsbCwKICAgICAgICBmaWxlQWRkZWQ6IG51bGwsCiAgICAgICAgeWVhcjogbnVsbCwKICAgICAgICBoZWFkZXI6IG51bGwsCiAgICAgICAgc3RhZ2VkQ2FuZGlkYXRlczogW10sCiAgICAgICAgaGlkZURyb3Bab25lOiBmYWxzZSwKICAgICAgICBzaG93UmVzdWx0czogZmFsc2UsCiAgICAgICAgcmVzdWx0czogW10sCiAgICAgICAgZHJvcHpvbmVPcHRpb25zOiB7CiAgICAgICAgICB1cmw6ICcvYXBpL3VwbG9hZCcsCiAgICAgICAgICBhdXRvUHJvY2Vzc1F1ZXVlOiBmYWxzZSwKICAgICAgICAgIGF1dG9RdWV1ZTogdHJ1ZSwKICAgICAgICAgIHBhcmFsbGVsVXBsb2FkczogMSwKICAgICAgICAgIG1heEZpbGVzOiAxLAogICAgICAgICAgdXBsb2FkTXVsdGlwbGU6IGZhbHNlLAogICAgICAgICAgY3JlYXRlSW1hZ2VUaHVtYm5haWxzOiBmYWxzZSwKICAgICAgICAgIGFkZFJlbW92ZUxpbmtzOiBmYWxzZSwKICAgICAgICAgIHRpbWVvdXQ6IDM2MDAwMCwgLy9taWxsaXNlY29uZHMKICAgICAgICAgIC8vIGhlYWRlcnM6IHsKICAgICAgICAgIC8vICAgICAgICJYLUNTUkYtVE9LRU4iOiBkb2N1bWVudC5oZWFkLnF1ZXJ5U2VsZWN0b3IoIltuYW1lPWNzcmYtdG9rZW5dIikuY29udGVudAogICAgICAgICAgLy8gfSwKICAgICAgICAgIG1heEZpbGVzaXplOiAxMDAwMCwKICAgICAgICAgIGNodW5raW5nOiB0cnVlLAogICAgICAgICAgZm9yY2VDaHVua2luZzogdHJ1ZSwKICAgICAgICAgIGNodW5rU2l6ZTogMjAwMDAwMCwKICAgICAgICAgIHVwbG9hZE11bHRpcGxlOiBmYWxzZQogICAgICAgIH0sCiAgICAgIH0KICAJfSwKCWNvbXBvbmVudHM6IHsKICAgIAl2dWVEcm9wem9uZTogdnVlMkRyb3B6b25lCiAgCX0sCiAgY29tcHV0ZWQ6IHsKICAgcHJpb3JZZWFycygpIHsKICAgICAgICBsZXQgeAogICAgICAgIGxldCB0ZXJtcyA9IHRoaXMub3JnYW5pemF0aW9uLnRlcm1zCiAgICAgICAgbGV0IHllYXJzID0gW10KICAgICAgICBmb3IoeCBpbiB0ZXJtcykgeyAKICAgICAgICAgIHllYXJzLnB1c2godGVybXNbeF0ueWVhcikgfQogICAgICAgIHJldHVybiB5ZWFycwogICAgfSwKICAgIGNoZWNrSGVhZGVyKCkgewogICAgICByZXR1cm4gdGhpcy5oZWFkZXIKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7fSwKICAJbWV0aG9kczogewogICAgICByZXNldEltcG9ydCgpIHsKICAgICAgICB0aGlzLnN0YWdlZENhbmRpZGF0ZXMgPSBbXQogICAgICAgIHRoaXMuaGVhZGVyID0gbnVsbAogICAgICAgIHRoaXMuJHJlZnMubXlWdWVEcm9wem9uZS5yZW1vdmVBbGxGaWxlcygpCiAgICAgICAgdGhpcy5oaWRlRHJvcFpvbmUgPSBmYWxzZQogICAgICAgIHRoaXMuc2hvd1Jlc3VsdHMgPSBmYWxzZQogICAgICB9LAogICAgICBzdGFydEltcG9ydCgpIHsKICAgICAgICBpZih0aGlzLnllYXIgPT0gIG51bGwpIHsKICAgICAgICAgIGFsZXJ0KCdTZWxlY3QgYSB5ZWFyLicpCiAgICAgICAgfQogICAgICAgIGVsc2UgaWYodGhpcy5zdGFnZWRDYW5kaWRhdGVzLmxlbmd0aCA9PSAwKSB7IAogICAgICAgICAgYWxlcnQoJ1BsZWFzZSBVcGxvYWQgQSBDU1YnKQogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgIGxldCBjID0gY29uZmlybSgnU3RhcnQgaW1wb3J0aW5nICcrdGhpcy5zdGFnZWRDYW5kaWRhdGVzLmxlbmd0aCsnIGNhbmRpZGF0ZXMgZm9yIHRoZSB5ZWFyICcrdGhpcy55ZWFyKQogICAgICAgICAgaWYoYykgewogICAgICAgICAgICB0aGlzLiRQcm9ncmVzcy5zdGFydCgpCiAgICAgICAgICAgIGxldCBpIAogICAgICAgICAgICBmb3IoaSBpbiB0aGlzLnN0YWdlZENhbmRpZGF0ZXMpIHsKICAgICAgICAgICAgICAvLyBDSEVDSyBGT1IgRU1QVFkgVkFMVUVTCiAgICAgICAgICAgICAgbGV0IHgKICAgICAgICAgICAgICBsZXQgY28gPSB0aGlzLnN0YWdlZENhbmRpZGF0ZXNbaV0KICAgICAgICAgICAgICBmb3IoeCBpbiBjbykgeyBpZiggY29beF0gPT0gIiIgfHwgY29beF0gPT0gbnVsbCkgeyBjb1t4XSA9ICJuL2EiIH0gfQogICAgICAgICAgICAgICAgLy8gQUREIFJFUVVJUkVEIERZTkFNTyBEQiBWQUxVRVMgCiAgICAgICAgICAgICAgICB0aGlzLnN0YWdlZENhbmRpZGF0ZXNbaV1bJ09yZ2FuaXphdGlvbiddICA9IHRoaXMub3JnYW5pemF0aW9uLm5hbWUKICAgICAgICAgICAgICAgIHRoaXMuc3RhZ2VkQ2FuZGlkYXRlc1tpXVsnUmFuay1UZXJtJ10gICAgICA9IHRoaXMueWVhcgogICAgICAgICAgICAgICAgdGhpcy5zdGFnZWRDYW5kaWRhdGVzW2ldWydpbnRlcnZpZXcnXSAgICAgID0geyAnc3RhdHVzJyA6ICdpbmNvbXBsZXRlJyB9CiAgICAgICAgICAgICAgICB0aGlzLnN0YWdlZENhbmRpZGF0ZXNbaV1bJ3N1cnZleV8xJ10gICAgICAgPSB7ICdzdGF0dXMnIDogJ2luY29tcGxldGUnIH0KICAgICAgICAgICAgICAgIHRoaXMuc3RhZ2VkQ2FuZGlkYXRlc1tpXVsnc3VydmV5XzInXSAgICAgID0geyAnc3RhdHVzJyA6ICdpbmNvbXBsZXRlJyB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIGF4aW9zIHBvc3QgdG8gYXBpIAogICAgICAgICAgICB3aW5kb3cuYXhpb3MucG9zdChBUElfVVJMKycvY2FuZGlkYXRlL2FkZC8nK3RoaXMub3JnYW5pemF0aW9uLm5hbWUsICB0aGlzLnN0YWdlZENhbmRpZGF0ZXMpCiAgICAgICAgICAgIC50aGVuKCh7ZGF0YX0pID0+IHsgCiAgICAgICAgICAgICAgYWxlcnQoIkNhbmRpZGF0ZXMgSW1wb3J0ZWQgU3VjY2Vzc2Z1bGx5IikKICAgICAgICAgICAgICB0aGlzLnJlc3VsdHMgPSBkYXRhCiAgICAgICAgICAgICAgdGhpcy5zaG93UmVzdWx0cyA9IHRydWUKICAgICAgICAgICAgICB0aGlzLiRQcm9ncmVzcy5maW5pc2goKQogICAgICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsgCiAgICAgICAgICAgICAgdGhpcy4kUHJvZ3Jlc3MuZmFpbCgpCiAgICAgICAgICAgICAgYWxlcnQoZSkgCiAgICAgICAgICAgIH0pCiAgICAgICAgfSAKICAgICAgfSwKICAgICAgY2hvb3NlRmlsZSgpIHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJkcm9wem9uZSIpWzBdLmNsaWNrKCk7CiAgICAgIH0sCiAgICAgIHByb2Nlc3NRdWV1ZSgpIHsKICAgICAgICAgIHRoaXMuJHJlZnMubXlWdWVEcm9wem9uZS5wcm9jZXNzUXVldWUoKQogICAgICB9LAogICAgICB2ZmlsZUFkZGVkKGZpbGUpIHsKICAgICAgICBsZXQgdm0gPSB0aGlzCiAgICAgICAgdGhpcy5maWxlID0gZmlsZQogICAgICAgIHRoaXMuZmlsZUFkZGVkID0gdHJ1ZQogICAgICAgIGxldCBmaWxlQ2hlY2sgPSBmaWxlLm5hbWUuZW5kc1dpdGgoJy5jc3YnKQogICAgICAgIGlmIChmaWxlQ2hlY2spIHsKICAgICAgICAgIHRoaXMuaGlkZURyb3Bab25lID0gdHJ1ZQogICAgICAgICAgbGV0IGkgPSB7CiAgICAgICAgICAgICJkYXRlIiA6ICcnLAogICAgICAgICAgICAibmFtZSIgOiBmaWxlLm5hbWUsCiAgICAgICAgICAgICJwcm9ncmVzcyIgOiBmaWxlLnByb2dyZXNzLAogICAgICAgICAgfQogICAgICAgICAgdGhpcy5pbXBvcnRzLnB1c2goaSkKICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbihldmVudCkgewogICAgICAgICAgICAgIGxldCBzdHJpbmcgPSBldmVudC50YXJnZXQucmVzdWx0CiAgICAgICAgICAgICAgY3N2KCkKICAgICAgICAgICAgICAgIC5mcm9tU3RyaW5nKHN0cmluZykKICAgICAgICAgICAgICAgIC5vbignaGVhZGVyJywoaGVhZGVyKT0+ewogICAgICAgICAgICAgICAgICB2bS5oZWFkZXIgPSBoZWFkZXIKCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLnRoZW4oKGpzb25PYmopPT57CiAgICAgICAgICAgICAgICAgIHZtLnN0YWdlZENhbmRpZGF0ZXMgPSBqc29uT2JqCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgfQoKICAgICAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOwoKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnZhbGlkWmlwID0gbnVsbAogICAgICAgICAgICB0aGlzLiRyZWZzLm15VnVlRHJvcHpvbmUucmVtb3ZlRmlsZShmaWxlKQogICAgICAgICAgICBhbGVydCgiTm90IGEgdmFsaWQgdXBsb2FkIGZpbGUuIikKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHNlbmRpbmdFdmVudCAoZmlsZSwgeGhyLCBmb3JtRGF0YSkge30sCiAgICAgIHZzdWNjZXNzKGZpbGUsIHJlc3BvbnNlKSB7fSwKICAgICAgdmxvZ1Byb2dyZXNzKGZpbGUsIHByb2dyZXNzLCBieXRlc1NlbnQpIHt9LAogICAgfQp9Owo="},{"version":3,"sources":["importData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"importData.vue","sourceRoot":"src/components/Dashboard/admin/setup","sourcesContent":["<template>\n\t<div class=\"container-fluid\">  \n\t\t<b-row>\n      <!-- <h5>Automate Uplaod</h5> -->\n      <b-col sm=\"6\">\n         <label class=\"tx-12 wt-600 dark-gray\">Choose Year:</label>\n            <b-form-select v-model=\"year\" :options=\"priorYears\"></b-form-select>\n      </b-col>\n      <b-col sm=\"3\"></b-col>\n      <b-col sm=\"3\" class=\"pt-2\">\n        <b-button variant=\"primary\" size=\"sm\" class=\"float-right mt-4 mr-1\" @click=\"startImport()\">Start Import</b-button>\n        <b-button variant=\"danger\" size=\"sm\" class=\"float-right mt-4 mr-1\" @click=\"resetImport()\">Clear</b-button>\n      </b-col>\n      <b-col sm=\"12\">\n          <hr />\n          <table id=\"\" class=\"table table-bordered table-hover\" :class=\"{'d-none': !showResults}\">\n           <thead>\n              <tr>\n                <th scope=\"col\">Import Results</th>\n              </tr>\n            </thead>\n             <tbody>\n              <tr v-for=\"(x, index) in results\">\n                  <td> {{ x['Last Name'] }}, {{ x['First Name'] }} </td>\n              </tr>\n            </tbody>\n          </table>\n        <!-- <h5>Manual Upload</h5> -->\n        <vue-dropzone \n          ref=\"myVueDropzone\" \n          id=\"dropzone\" \n          class=\"mb-4\"\n          :class=\"{'d-none': hideDropZone}\" \n          @vdropzone-file-added=\"vfileAdded\"\n          @vdropzone-success=\"vsuccess\"\n          @vdropzone-upload-progress=\"vlogProgress\"\n          v-on:vdropzone-sending=\"sendingEvent\"\n          :options=\"dropzoneOptions\"\n          :useCustomSlot=\"true\"\n          :duplicateCheck=\"true\"\n        >\n          <div class=\"dropzone-custom-content mt-2 text-center\">\n            <span class=\"fa-stack fa-4x\">\n              <i class=\"fa fa-circle fa-stack-2x light-gray\"></i>\n              <i class=\"fa fa-upload fa-stack-1x white\"></i>\n            </span>\n            <p class=\"text-center tx-14 wt-500\">Drag and drop a file you want to upload</p>\n            <span class=\"btn btn-primary btn-sm\">Select File</span>\n          </div>\n        </vue-dropzone>\n      </b-col>\n      <b-col sm=\"6\">\n        <label class=\"tx-18 wt-600 dark-gray\">Candidate Fields</label>\n        <hr />\n        <ul class=\"candidate-fields\">\n           <li class=\"candidate-field\" v-for=\"(x, index) in header\">{{ x }}</li>\n        </ul>\n      </b-col>\n       <b-col sm=\"6\">\n        <label class=\"tx-18 wt-600 dark-gray\">Candidates {{ stagedCandidates.length }}</label>\n         <hr />\n         <p class=\"mb-0\" v-for=\"(x, index) in stagedCandidates\">\n          <i class=\"fa fa-user-circle gray\"></i> {{ x['Last Name'] }}, {{ x['First Name'] }} \n        </p>\n      </b-col>\n      </b-col>\n    </b-col>\n    </b-row>\n\t</div>\n</template>\n\n<script>\nconst currentYear = (new Date()).getFullYear();\nconst API_URL = process.env.VUE_APP_API_URL\n\nimport vue2Dropzone from 'vue2-dropzone'\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\nconst csv = require('csvtojson')\n\n\n\nexport default {\n\tname: 'importData',\n  props: [\"organization\",\"user\",\"candidates\",\"surveys\",\"faculty\"],\n  watch: {\n    organization: function(newVal, oldVal) {\n      if(newVal) {\n        this.organization = newVal\n      }\n    }\n  },\n\tdata() {\n    \treturn {\n        fields:['Date', 'File Name', 'Upload Progress'],\n        imports :[],\n        file: null,\n        fileAdded: null,\n        year: null,\n        header: null,\n        stagedCandidates: [],\n        hideDropZone: false,\n        showResults: false,\n        results: [],\n        dropzoneOptions: {\n          url: '/api/upload',\n          autoProcessQueue: false,\n          autoQueue: true,\n          parallelUploads: 1,\n          maxFiles: 1,\n          uploadMultiple: false,\n          createImageThumbnails: false,\n          addRemoveLinks: false,\n          timeout: 360000, //milliseconds\n          // headers: {\n          //       \"X-CSRF-TOKEN\": document.head.querySelector(\"[name=csrf-token]\").content\n          // },\n          maxFilesize: 10000,\n          chunking: true,\n          forceChunking: true,\n          chunkSize: 2000000,\n          uploadMultiple: false\n        },\n      }\n  \t},\n\tcomponents: {\n    \tvueDropzone: vue2Dropzone\n  \t},\n  computed: {\n   priorYears() {\n        let x\n        let terms = this.organization.terms\n        let years = []\n        for(x in terms) { \n          years.push(terms[x].year) }\n        return years\n    },\n    checkHeader() {\n      return this.header\n    }\n  },\n  mounted() {},\n  \tmethods: {\n      resetImport() {\n        this.stagedCandidates = []\n        this.header = null\n        this.$refs.myVueDropzone.removeAllFiles()\n        this.hideDropZone = false\n        this.showResults = false\n      },\n      startImport() {\n        if(this.year ==  null) {\n          alert('Select a year.')\n        }\n        else if(this.stagedCandidates.length == 0) { \n          alert('Please Upload A CSV')\n        }\n        else {\n          let c = confirm('Start importing '+this.stagedCandidates.length+' candidates for the year '+this.year)\n          if(c) {\n            this.$Progress.start()\n            let i \n            for(i in this.stagedCandidates) {\n              // CHECK FOR EMPTY VALUES\n              let x\n              let co = this.stagedCandidates[i]\n              for(x in co) { if( co[x] == \"\" || co[x] == null) { co[x] = \"n/a\" } }\n                // ADD REQUIRED DYNAMO DB VALUES \n                this.stagedCandidates[i]['Organization']  = this.organization.name\n                this.stagedCandidates[i]['Rank-Term']      = this.year\n                this.stagedCandidates[i]['interview']      = { 'status' : 'incomplete' }\n                this.stagedCandidates[i]['survey_1']       = { 'status' : 'incomplete' }\n                this.stagedCandidates[i]['survey_2']      = { 'status' : 'incomplete' }\n              }\n            }\n            // axios post to api \n            window.axios.post(API_URL+'/candidate/add/'+this.organization.name,  this.stagedCandidates)\n            .then(({data}) => { \n              alert(\"Candidates Imported Successfully\")\n              this.results = data\n              this.showResults = true\n              this.$Progress.finish()\n            })\n            .catch(function (e) { \n              this.$Progress.fail()\n              alert(e) \n            })\n        } \n      },\n      chooseFile() {\n        document.getElementsByClassName(\"dropzone\")[0].click();\n      },\n      processQueue() {\n          this.$refs.myVueDropzone.processQueue()\n      },\n      vfileAdded(file) {\n        let vm = this\n        this.file = file\n        this.fileAdded = true\n        let fileCheck = file.name.endsWith('.csv')\n        if (fileCheck) {\n          this.hideDropZone = true\n          let i = {\n            \"date\" : '',\n            \"name\" : file.name,\n            \"progress\" : file.progress,\n          }\n          this.imports.push(i)\n          const reader = new FileReader();\n            reader.onload = function(event) {\n              let string = event.target.result\n              csv()\n                .fromString(string)\n                .on('header',(header)=>{\n                  vm.header = header\n\n                })\n                .then((jsonObj)=>{\n                  vm.stagedCandidates = jsonObj\n                })\n          }\n\n          reader.readAsText(file);\n\n        } else {\n            this.validZip = null\n            this.$refs.myVueDropzone.removeFile(file)\n            alert(\"Not a valid upload file.\")\n        }\n      },\n      sendingEvent (file, xhr, formData) {},\n      vsuccess(file, response) {},\n      vlogProgress(file, progress, bytesSent) {},\n    }\n};\n</script>\n<style scoped lang=\"scss\">\n  .candidate-fields { padding-inline-start: 0px; }\n  .candidate-field {\n    list-style: none;\n    display: block;\n    // font-size: 12px;\n    background-color: #f7f7f7;\n    padding: 10px;\n    margin: 5px; \n  }\n</style>"]}]}