{"remainingRequest":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/pdfvuer/src/Pdfvuer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/pdfvuer/src/Pdfvuer.vue","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCid1c2Ugc3RyaWN0JzsKCmltcG9ydCAncGRmanMtZGlzdC93ZWIvcGRmX3ZpZXdlci5jc3MnOwppbXBvcnQgcGRmanNMaWIgZnJvbSAncGRmanMtZGlzdC93ZWJwYWNrLmpzJzsKaW1wb3J0IHsgRGVmYXVsdEFubm90YXRpb25MYXllckZhY3RvcnksIERlZmF1bHRUZXh0TGF5ZXJGYWN0b3J5LCBQREZMaW5rU2VydmljZSwgUERGUGFnZVZpZXcgfSBmcm9tICdwZGZqcy1kaXN0L3dlYi9wZGZfdmlld2VyLmpzJzsKaW1wb3J0IHJlc2l6ZVNlbnNvciBmcm9tICd2dWUtcmVzaXplLXNlbnNvcicKCmZ1bmN0aW9uIGlzUERGRG9jdW1lbnRMb2FkaW5nVGFzayhvYmopIHsKICByZXR1cm4gdHlwZW9mIChvYmopID09PSAnb2JqZWN0JyAmJiBvYmogIT09IG51bGwgJiYgb2JqLl9fUERGRG9jdW1lbnRMb2FkaW5nVGFzayA9PT0gdHJ1ZTsKfQoKZnVuY3Rpb24gY3JlYXRlTG9hZGluZ1Rhc2soc3JjLCBvcHRpb25zKSB7CiAgdmFyIHNvdXJjZTsKICBpZiAodHlwZW9mIChzcmMpID09PSAnc3RyaW5nJykKICAgIHNvdXJjZSA9IHt1cmw6IHNyY307CiAgZWxzZSBpZiAodHlwZW9mIChzcmMpID09PSAnb2JqZWN0JyAmJiBzcmMgIT09IG51bGwpCiAgICBzb3VyY2UgPSBPYmplY3QuYXNzaWduKHt9LCBzcmMpOwogIGVsc2UKICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgc3JjIHR5cGUnKTsKCiAgdmFyIGxvYWRpbmdUYXNrID0gcGRmanNMaWIuZ2V0RG9jdW1lbnQoc291cmNlKS5wcm9taXNlOwogIGxvYWRpbmdUYXNrLl9fUERGRG9jdW1lbnRMb2FkaW5nVGFzayA9IHRydWU7IC8vIHNpbmNlIFBERkRvY3VtZW50TG9hZGluZ1Rhc2sgaXMgbm90IHB1YmxpYwoKICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm9uUGFzc3dvcmQpCiAgICBsb2FkaW5nVGFzay5vblBhc3N3b3JkID0gb3B0aW9ucy5vblBhc3N3b3JkOwoKICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm9uUHJvZ3Jlc3MpCiAgICBsb2FkaW5nVGFzay5vblByb2dyZXNzID0gb3B0aW9ucy5vblByb2dyZXNzOwoKICByZXR1cm4gbG9hZGluZ1Rhc2s7Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGVMb2FkaW5nVGFzazogY3JlYXRlTG9hZGluZ1Rhc2ssCiAgY29tcG9uZW50czogewogICAgcmVzaXplU2Vuc29yCiAgfSwKICBwcm9wczogewogICAgc3JjOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE9iamVjdCwgUHJvbWlzZV0sCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKICAgIHBhZ2U6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxLAogICAgfSwKICAgIHJvdGF0ZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAsCiAgICB9LAogICAgc2NhbGU6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSwKICAgICAgZGVmYXVsdDogJ3BhZ2Utd2lkdGgnLAogICAgfSwKICAgIHJlc2l6ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCiAgICBhbm5vdGF0aW9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICAgIHRleHQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZSwKICAgIH0sCiAgfSwKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBpbnRlcm5hbFNyYzogdGhpcy5zcmMsCiAgICAgIHBkZjogbnVsbCwKICAgICAgcGRmVmlld2VyOiBudWxsLAogICAgICBsb2FkaW5nOiB0cnVlLAogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHBkZjogZnVuY3Rpb24gKHZhbCkgewogICAgICB2YXIgcGRmSW5mbyA9IHZhbC5wZGZJbmZvIHx8IHZhbC5fcGRmSW5mbwogICAgICB0aGlzLiRlbWl0KCdudW1wYWdlcycsIHBkZkluZm8ubnVtUGFnZXMpOwogICAgfSwKICAgIHBhZ2U6IGZ1bmN0aW9uICh2YWwpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICB0aGlzLnBkZi5nZXRQYWdlKHZhbCkudGhlbihmdW5jdGlvbiAocGRmUGFnZSkgewogICAgICAgIHNlbGYucGRmVmlld2VyLnNldFBkZlBhZ2UocGRmUGFnZSk7CiAgICAgICAgc2VsZi5wZGZWaWV3ZXIuZHJhdygpOwogICAgICB9KTsKICAgIH0sCiAgICBzY2FsZTogZnVuY3Rpb24gKHZhbCkgewogICAgICB0aGlzLmRyYXdTY2FsZWQodmFsKTsKICAgIH0sCiAgICByb3RhdGU6IGZ1bmN0aW9uIChuZXdSb3RhdGUpIHsKICAgICAgaWYgKHRoaXMucGRmVmlld2VyKSB7CiAgICAgICAgdGhpcy5wZGZWaWV3ZXIudXBkYXRlKHRoaXMuc2NhbGUsIG5ld1JvdGF0ZSk7CiAgICAgICAgdGhpcy5wZGZWaWV3ZXIuZHJhdygpOwogICAgICB9CiAgICB9LAogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgaWYgKCFpc1BERkRvY3VtZW50TG9hZGluZ1Rhc2soc2VsZi5pbnRlcm5hbFNyYykpIHsKICAgICAgc2VsZi5pbnRlcm5hbFNyYyA9IGNyZWF0ZUxvYWRpbmdUYXNrKHNlbGYuaW50ZXJuYWxTcmMpOwogICAgICBzZWxmLiRlbWl0KCdsb2FkaW5nJywgdHJ1ZSk7CiAgICB9CgogICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuJHJlZnMuY29udGFpbmVyOwoKICAgIC8vIChPcHRpb25hbGx5KSBlbmFibGUgaHlwZXJsaW5rcyB3aXRoaW4gUERGIGZpbGVzLgogICAgdmFyIHBkZkxpbmtTZXJ2aWNlID0gbmV3IFBERkxpbmtTZXJ2aWNlKCk7CgogICAgLy8gc2VsZi5wZGYgPSBwZGZTaW5nbGVQYWdlVmlld2VyOwogICAgLy8gY29uc29sZS5sb2coc2VsZi5wZGYuY3VycmVudFNjYWxlVmFsdWUpOwogICAgLy8gcGRmTGlua1NlcnZpY2Uuc2V0Vmlld2VyKHNlbGYucGRmKTsKICAgIC8vCiAgICAvLyAvLyAoT3B0aW9uYWxseSkgZW5hYmxlIGZpbmQgY29udHJvbGxlci4KICAgIC8vIHZhciBwZGZGaW5kQ29udHJvbGxlciA9IG5ldyBQREZGaW5kQ29udHJvbGxlcih7CiAgICAvLyAgIHBkZlZpZXdlcjogc2VsZi5wZGYsCiAgICAvLyB9KTsKICAgIC8vIHNlbGYucGRmLnNldEZpbmRDb250cm9sbGVyKHBkZkZpbmRDb250cm9sbGVyKTsKICAgIC8vCiAgICAvLyBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcigncGFnZXNpbml0JywgZnVuY3Rpb24gKCkgewogICAgLy8gICAvLyBXZSBjYW4gdXNlIHBkZlNpbmdsZVBhZ2VWaWV3ZXIgbm93LCBlLmcuIGxldCdzIGNoYW5nZSBkZWZhdWx0IHNjYWxlLgogICAgLy8gICBzZWxmLnBkZi5jdXJyZW50U2NhbGVWYWx1ZSA9ICdwYWdlLXdpZHRoJzsKICAgIC8vCiAgICAvLyAgIGlmIChTRUFSQ0hfRk9SKSB7IC8vIFdlIGNhbiB0cnkgc2VhcmNoIGZvciB0aGluZ3MKICAgIC8vICAgICBwZGZGaW5kQ29udHJvbGxlci5leGVjdXRlQ29tbWFuZCgnZmluZCcsIHtxdWVyeTogU0VBUkNIX0ZPUn0pOwogICAgLy8gICB9CiAgICAvLyB9KTsKICAgIC8vCiAgICBsZXQgYW5ub3RhdGlvbkxheWVyID0gdW5kZWZpbmVkLCB0ZXh0TGF5ZXIgPSB1bmRlZmluZWQ7CiAgICBpZiAoc2VsZi5hbm5vdGF0aW9uKSB7CiAgICAgIGFubm90YXRpb25MYXllciA9IG5ldyBEZWZhdWx0QW5ub3RhdGlvbkxheWVyRmFjdG9yeSgpOwogICAgfQogICAgaWYgKHNlbGYudGV4dCkgewogICAgICB0ZXh0TGF5ZXIgPSBuZXcgRGVmYXVsdFRleHRMYXllckZhY3RvcnkoKTsKICAgIH0KCiAgICBzZWxmLmludGVybmFsU3JjCiAgICAgIC50aGVuKGZ1bmN0aW9uIChwZGZEb2N1bWVudCkgewogICAgICAgIC8vIERvY3VtZW50IGxvYWRlZCwgcmV0cmlldmluZyB0aGUgcGFnZS4KICAgICAgICBzZWxmLnBkZiA9IHBkZkRvY3VtZW50OwogICAgICAgIHJldHVybiBwZGZEb2N1bWVudC5nZXRQYWdlKHNlbGYucGFnZSkKICAgICAgfSkudGhlbihmdW5jdGlvbiAocGRmUGFnZSkgewogICAgICAvLyBDcmVhdGluZyB0aGUgcGFnZSB2aWV3IHdpdGggZGVmYXVsdCBwYXJhbWV0ZXJzLgogICAgICBzZWxmLnBkZlZpZXdlciA9IG5ldyBQREZQYWdlVmlldyh7CiAgICAgICAgY29udGFpbmVyOiBjb250YWluZXIsCiAgICAgICAgaWQ6IHNlbGYucGFnZSwKICAgICAgICBzY2FsZTogMSwKICAgICAgICBkZWZhdWx0Vmlld3BvcnQ6IHBkZlBhZ2UuZ2V0Vmlld3BvcnQoe3NjYWxlOiAxfSksCiAgICAgICAgLy8gV2UgY2FuIGVuYWJsZSB0ZXh0L2Fubm90YXRpb25zIGxheWVycywgaWYgbmVlZGVkCiAgICAgICAgdGV4dExheWVyRmFjdG9yeTogdGV4dExheWVyLAogICAgICAgIGFubm90YXRpb25MYXllckZhY3Rvcnk6IGFubm90YXRpb25MYXllciwKICAgICAgfSk7CiAgICAgIC8vIEFzc29jaWF0ZXMgdGhlIGFjdHVhbCBwYWdlIHdpdGggdGhlIHZpZXcsIGFuZCBkcmF3aW5nIGl0CiAgICAgIHNlbGYucGRmVmlld2VyLnNldFBkZlBhZ2UocGRmUGFnZSk7CiAgICAgIHBkZkxpbmtTZXJ2aWNlLnNldFZpZXdlcihzZWxmLnBkZlZpZXdlcik7CiAgICAgIHNlbGYuZHJhd1NjYWxlZChzZWxmLnNjYWxlKTsKICAgIH0pLmNhdGNoKGVyciA9PiBzZWxmLiRlbWl0KCdlcnJvcicsIGVycikpCiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgaWYgKHNlbGYucGRmVmlld2VyKSB7CiAgICAgIHNlbGYucGRmVmlld2VyLmRlc3Ryb3koKTsKICAgICAgc2VsZi5wZGZWaWV3ZXIgPSBudWxsOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2FsY3VsYXRlU2NhbGU6IGZ1bmN0aW9uICh3aWR0aCA9IC0xLCBoZWlnaHQgPSAtMSkgewogICAgICB0aGlzLnBkZlZpZXdlci51cGRhdGUoMSwgdGhpcy5yb3RhdGUpOyAvLyBSZXNldCBzY2FsaW5nIHRvIDEgc28gdGhhdCAidGhpcy5wZGZWaWV3ZXIudmlld3BvcnQud2lkdGgiIGdpdmVzIHByb3BlciB3aWR0aDsKICAgICAgaWYgKHdpZHRoID09PSAtMSAmJiBoZWlnaHQgPT09IC0xKSB7CiAgICAgICAgd2lkdGggPSB0aGlzLiRyZWZzLmNvbnRhaW5lci5vZmZzZXRXaWR0aDsKICAgICAgfQoKICAgICAgcmV0dXJuIHdpZHRoIC8gdGhpcy5wZGZWaWV3ZXIudmlld3BvcnQud2lkdGg7CiAgICB9LAogICAgZHJhd1NjYWxlZDogZnVuY3Rpb24gKG5ld1NjYWxlKSB7CiAgICAgIGlmICh0aGlzLnBkZlZpZXdlcikgewogICAgICAgIGlmIChuZXdTY2FsZSA9PT0gJ3BhZ2Utd2lkdGgnKSB7CiAgICAgICAgICBuZXdTY2FsZSA9IHRoaXMuY2FsY3VsYXRlU2NhbGUoKTsKICAgICAgICAgIHRoaXMuJGVtaXQoInVwZGF0ZTpzY2FsZSIsIG5ld1NjYWxlKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5wZGZWaWV3ZXIudXBkYXRlKG5ld1NjYWxlLCB0aGlzLnJvdGF0ZSk7CiAgICAgICAgdGhpcy5wZGZWaWV3ZXIuZHJhdygpOwogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIHRoaXMuJGVtaXQoJ2xvYWRpbmcnLCBmYWxzZSk7CiAgICAgIH0KICAgIH0sCiAgICByZXNpemVTY2FsZTogZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy5yZXNpemUpIHsKICAgICAgICB0aGlzLmRyYXdTY2FsZWQoJ3BhZ2Utd2lkdGgnKTsKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["Pdfvuer.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pdfvuer.vue","sourceRoot":"node_modules/pdfvuer/src","sourcesContent":["<template>\n  <div>\n    <slot v-if=\"loading\" name=\"loading\"/>\n    <div id=\"viewerContainer\" ref=\"container\">\n      <div id=\"viewer\" class=\"pdfViewer\"/>\n      <resizeSensor :initial=\"true\" @resize=\"resizeScale\"/>\n    </div>\n  </div>\n</template>\n<script>\n  'use strict';\n\n  import 'pdfjs-dist/web/pdf_viewer.css';\n  import pdfjsLib from 'pdfjs-dist/webpack.js';\n  import { DefaultAnnotationLayerFactory, DefaultTextLayerFactory, PDFLinkService, PDFPageView } from 'pdfjs-dist/web/pdf_viewer.js';\n  import resizeSensor from 'vue-resize-sensor'\n\n  function isPDFDocumentLoadingTask(obj) {\n    return typeof (obj) === 'object' && obj !== null && obj.__PDFDocumentLoadingTask === true;\n  }\n\n  function createLoadingTask(src, options) {\n    var source;\n    if (typeof (src) === 'string')\n      source = {url: src};\n    else if (typeof (src) === 'object' && src !== null)\n      source = Object.assign({}, src);\n    else\n      throw new TypeError('invalid src type');\n\n    var loadingTask = pdfjsLib.getDocument(source).promise;\n    loadingTask.__PDFDocumentLoadingTask = true; // since PDFDocumentLoadingTask is not public\n\n    if (options && options.onPassword)\n      loadingTask.onPassword = options.onPassword;\n\n    if (options && options.onProgress)\n      loadingTask.onProgress = options.onProgress;\n\n    return loadingTask;\n  }\n\n  export default {\n    createLoadingTask: createLoadingTask,\n    components: {\n      resizeSensor\n    },\n    props: {\n      src: {\n        type: [String, Object, Promise],\n        default: '',\n      },\n      page: {\n        type: Number,\n        default: 1,\n      },\n      rotate: {\n        type: Number,\n        default: 0,\n      },\n      scale: {\n        type: [Number, String],\n        default: 'page-width',\n      },\n      resize: {\n        type: Boolean,\n        default: false,\n      },\n      annotation: {\n        type: Boolean,\n        default: false,\n      },\n      text: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    data: function () {\n      return {\n        internalSrc: this.src,\n        pdf: null,\n        pdfViewer: null,\n        loading: true,\n      }\n    },\n    watch: {\n      pdf: function (val) {\n        var pdfInfo = val.pdfInfo || val._pdfInfo\n        this.$emit('numpages', pdfInfo.numPages);\n      },\n      page: function (val) {\n        var self = this;\n        this.pdf.getPage(val).then(function (pdfPage) {\n          self.pdfViewer.setPdfPage(pdfPage);\n          self.pdfViewer.draw();\n        });\n      },\n      scale: function (val) {\n        this.drawScaled(val);\n      },\n      rotate: function (newRotate) {\n        if (this.pdfViewer) {\n          this.pdfViewer.update(this.scale, newRotate);\n          this.pdfViewer.draw();\n        }\n      },\n    },\n    mounted: function () {\n      var self = this;\n      if (!isPDFDocumentLoadingTask(self.internalSrc)) {\n        self.internalSrc = createLoadingTask(self.internalSrc);\n        self.$emit('loading', true);\n      }\n\n      var container = this.$refs.container;\n\n      // (Optionally) enable hyperlinks within PDF files.\n      var pdfLinkService = new PDFLinkService();\n\n      // self.pdf = pdfSinglePageViewer;\n      // console.log(self.pdf.currentScaleValue);\n      // pdfLinkService.setViewer(self.pdf);\n      //\n      // // (Optionally) enable find controller.\n      // var pdfFindController = new PDFFindController({\n      //   pdfViewer: self.pdf,\n      // });\n      // self.pdf.setFindController(pdfFindController);\n      //\n      // container.addEventListener('pagesinit', function () {\n      //   // We can use pdfSinglePageViewer now, e.g. let's change default scale.\n      //   self.pdf.currentScaleValue = 'page-width';\n      //\n      //   if (SEARCH_FOR) { // We can try search for things\n      //     pdfFindController.executeCommand('find', {query: SEARCH_FOR});\n      //   }\n      // });\n      //\n      let annotationLayer = undefined, textLayer = undefined;\n      if (self.annotation) {\n        annotationLayer = new DefaultAnnotationLayerFactory();\n      }\n      if (self.text) {\n        textLayer = new DefaultTextLayerFactory();\n      }\n\n      self.internalSrc\n        .then(function (pdfDocument) {\n          // Document loaded, retrieving the page.\n          self.pdf = pdfDocument;\n          return pdfDocument.getPage(self.page)\n        }).then(function (pdfPage) {\n        // Creating the page view with default parameters.\n        self.pdfViewer = new PDFPageView({\n          container: container,\n          id: self.page,\n          scale: 1,\n          defaultViewport: pdfPage.getViewport({scale: 1}),\n          // We can enable text/annotations layers, if needed\n          textLayerFactory: textLayer,\n          annotationLayerFactory: annotationLayer,\n        });\n        // Associates the actual page with the view, and drawing it\n        self.pdfViewer.setPdfPage(pdfPage);\n        pdfLinkService.setViewer(self.pdfViewer);\n        self.drawScaled(self.scale);\n      }).catch(err => self.$emit('error', err))\n    },\n    beforeDestroy() {\n      var self = this;\n      if (self.pdfViewer) {\n        self.pdfViewer.destroy();\n        self.pdfViewer = null;\n      }\n    },\n    methods: {\n      calculateScale: function (width = -1, height = -1) {\n        this.pdfViewer.update(1, this.rotate); // Reset scaling to 1 so that \"this.pdfViewer.viewport.width\" gives proper width;\n        if (width === -1 && height === -1) {\n          width = this.$refs.container.offsetWidth;\n        }\n\n        return width / this.pdfViewer.viewport.width;\n      },\n      drawScaled: function (newScale) {\n        if (this.pdfViewer) {\n          if (newScale === 'page-width') {\n            newScale = this.calculateScale();\n            this.$emit(\"update:scale\", newScale);\n          }\n          this.pdfViewer.update(newScale, this.rotate);\n          this.pdfViewer.draw();\n          this.loading = false;\n          this.$emit('loading', false);\n        }\n      },\n      resizeScale: function () {\n        if (this.resize) {\n          this.drawScaled('page-width');\n        }\n      }\n    }\n  }\n</script>\n"]}]}