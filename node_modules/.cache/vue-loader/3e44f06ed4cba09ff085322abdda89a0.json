{"remainingRequest":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Dashboard/admin/setup/surveyManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Dashboard/admin/setup/surveyManagement.vue","mtime":1587865650000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovLyBVU0UgSlMgREFURSBGVU5DVElPTiBUTyBHRVQgQVJSQVkgT0YgWUVBUlMKY29uc3QgY3VycmVudFllYXIgPSAobmV3IERhdGUoKSkuZ2V0RnVsbFllYXIoKTsKY29uc3QgcmFuZ2UgPSAoc3RhcnQsIHN0b3AsIHN0ZXApID0+IEFycmF5LmZyb20oeyBsZW5ndGg6IChzdG9wIC0gc3RhcnQpIC8gc3RlcCArIDF9LCAoXywgaSkgPT4gc3RhcnQgKyAoaSAqIHN0ZXApKQpjb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElfVVJMCgpleHBvcnQgZGVmYXVsdCB7CgluYW1lOiAnc3VydmV5TWFuYWdlbWVudCcsCiAgcHJvcHM6IFsib3JnYW5pemF0aW9uIiwidXNlciIsImNhbmRpZGF0ZXMiLCJzdXJ2ZXlzIiwiZmFjdWx0eSJdLAogIHdhdGNoOiB7CiAgICBzdXJ2ZXlzOiBmdW5jdGlvbihuZXdWYWwsIG9sZFZhbCkgeyAKICAgICAgIGlmKG5ld1ZhbCkgeyAKICAgICAgICB0aGlzLnN1cnZleXMgPSBuZXdWYWwKICAgICAgIH0KICAgIH0sCiAgICBvcmdhbml6YXRpb246IGZ1bmN0aW9uKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGlmKG5ld1ZhbCkgewogICAgICAgIHRoaXMub3JnYW5pemF0aW9uID0gbmV3VmFsCiAgICAgICAgbGV0IHgKICAgICAgICBsZXQgdGVybXMgPSB0aGlzLm9yZ2FuaXphdGlvbi50ZXJtcwogICAgICAgIGlmKHRlcm1zLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGxldCB5cnMgPSBbXQogICAgICAgICAgZm9yKHggaW4gdGVybXMpIHsgeXJzLnB1c2godGVybXNbeF0ueWVhcikgfQogICAgICAgICAgbGV0IG1heCA9IHlycy5yZWR1Y2UoZnVuY3Rpb24oYSwgYikgewogICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoYSwgYik7CiAgICAgICAgICB9KQogICAgICAgICAgdGhpcy5uZXdlc3RUZXJtID0gbWF4CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgdGhpcy5uZXdlc3RUZXJtID0gKGN1cnJlbnRZZWFyICsgMSkKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAoJZGF0YSgpIHsKICAgIAlyZXR1cm4gewogICAgICAgIHN1cnZleU5hbWU6ICcgJywKICAgICAgICBzdXJ2ZXlUeXBlOiAnUHJlLUludGVydmlldycsCiAgICAgICAgc3VydmV5VGVybTogJzIwMjAnLAogICAgICAgIHN1cnZleVRlcm1zOiByYW5nZShjdXJyZW50WWVhciwgY3VycmVudFllYXIgLSA1MCwgLTEpLAogICAgICAgIHN1cnZleVR5cGVzIDogWydQcmUtSW50ZXJ2aWV3JywgJ0ludGVydmlldyddLAogICAgICAgIHNlbGVjdGVkOiAnbmV3JywKICAgICAgICBvcHRpb25zOiBbCiAgICAgICAgICB7IHRleHQ6ICdDcmVhdGUgTmV3IHN1cnZleScsIHZhbHVlOiAnbmV3JyB9LAogICAgICAgICAgeyB0ZXh0OiAnSGlzdG9yaWNhbCBTdXJ2ZXlzJywgdmFsdWU6ICdoaXN0b3JpY2FsJyB9LAogICAgICAgIF0sCiAgICAgICAgcXVlc3Rpb25zOiBbXSwKICAgICAgICBzdXJ2ZXk6IHsKICAgICAgICAgICJPcmdhbml6YXRpb24iICA6IHRoaXMudXNlci5Pcmdhbml6YXRpb24sCiAgICAgICAgICAidGVybSIgICAgICAgICAgOiB0aGlzLnN1cnZleVRlcm0sICAKICAgICAgICAgICJ0eXBlIiAgICAgICAgICA6IHRoaXMuc3VydmV5VHlwZSwgIAogICAgICAgICAgIm5hbWUiICAgICAgICAgIDogdGhpcy5zdXJ2ZXlOYW1lLAogICAgICAgICAgInF1ZXN0aW9ucyIgICAgIDogdGhpcy5xdWVzdGlvbnMKICAgICAgICB9LAogICAgICB9CiAgCX0sCiAgY29tcHV0ZWQ6IHsKICAgIHByaW9yWWVhcnMoKSB7CiAgICAgICAgbGV0IHgKICAgICAgICBsZXQgdGVybXMgPSB0aGlzLm9yZ2FuaXphdGlvbi50ZXJtcwogICAgICAgIGxldCB5ZWFycyA9IFtdCiAgICAgICAgZm9yKHggaW4gdGVybXMpIHsgCiAgICAgICAgICB5ZWFycy5wdXNoKHRlcm1zW3hdLnllYXIpIH0KICAgICAgICByZXR1cm4geWVhcnMKICAgICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFN1cnZleXMoKSB7fSwKICAgIGFkZFF1ZXN0aW9uKCkgewogICAgICBsZXQgeCA9IHsKICAgICAgICAgIHRleHQ6ICcnLAogICAgICAgICAgcHJldmlldzogZmFsc2UsCiAgICAgICAgICBvcHRpb25zOiBbMCwgMSwgMiwgMywgNCwgNV0sCiAgICAgICAgICBzZWxlY3RlZDogbnVsbCwKICAgICAgfQogICAgICB0aGlzLnF1ZXN0aW9ucy5wdXNoKHgpCiAgICB9LAogICAgc2F2ZVN1cnZleSgpIHsKICAgICAgbGV0IGlucHV0ID0gewogICAgICAgICAgT3JnYW5pemF0aW9uICA6IHRoaXMudXNlci5Pcmdhbml6YXRpb24sCiAgICAgICAgICB0ZXJtICAgICAgICAgIDogdGhpcy5zdXJ2ZXlUZXJtLCAgCiAgICAgICAgICB0eXBlICAgICAgICAgIDogdGhpcy5zdXJ2ZXlUeXBlLCAgCiAgICAgICAgICBuYW1lICAgICAgICAgIDogdGhpcy5zdXJ2ZXlOYW1lLAogICAgICAgICAgcXVlc3Rpb25zICAgICA6IHRoaXMucXVlc3Rpb25zCiAgICAgICAgfQogICAgICB3aW5kb3cuYXhpb3MucG9zdChBUElfVVJMKycvc3VydmV5L2FkZCcsIGlucHV0KQogICAgICAgIC50aGVuKCh7ZGF0YX0pID0+IHsKICAgICAgICAgIHRoaXMuc3VydmV5cy5wdXNoKGRhdGEpCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIGFsZXJ0KGUpCiAgICAgICAgICAvLyBhbGVydCgiRXJyb3Igc2F2aW5nIHN1cnZleS4iKQogICAgICAgIH0pCiAgICB9LAogICAgY2hvb3NlSGlzdG9yaWFsKHgpIHsKICAgICAgdGhpcy5zdXJ2ZXkgPSB4CiAgICB9LAogICAgcmVtb3ZlUXVlc3Rpb24ocSwgaW5kZXgpIHsKICAgICAgLy8gQVhJT1MgQVBJIENBTEwgVE8gREVMRVRFIFRIRU4oKQogICAgICB0aGlzLnF1ZXN0aW9ucy5zcGxpY2UoaW5kZXgsIDEpCiAgICB9LAogICAgbW92ZVF1ZXN0aW9uKHF1ZXN0aW9uLCBkZXN0aW5hdGlvbikgewogICAgICBjb25zb2xlLmxvZyhxdWVzdGlvbiwgZGVzdGluYXRpb24pCiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["surveyManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"surveyManagement.vue","sourceRoot":"src/components/Dashboard/admin/setup","sourcesContent":["<template>\n\t<div class=\"container-fluid\">  \n\t\t<b-row>\n      <b-col sm=\"6\">\n        <p v-if=\"surveyType == 'Pre-Interview'\">\n          <sup>*</sup>\n          You will now create a new Pre-Interview survey or choose from prior years.\n        </p>\n          <p v-if=\"surveyType == 'Interview'\">\n          <sup>*</sup>\n          You will now create a new Interview survey or choose from prior years.\n        </p>\n      </b-col>\n      <b-col sm=\"6\">\n         <b-form-group label=\"\" class=\"text-right\">\n          <b-form-radio-group\n            v-model=\"selected\"\n            :options=\"options\"\n            name=\"radio-options\"\n          ></b-form-radio-group>\n        </b-form-group>\n      </b-col>\n      <b-col sm=\"12\"><hr /></b-col>\n      <b-col v-if=\"selected == 'new' \" sm=\"12\" class=\"\">\n         <span class=\"pointer mr-2\" @click=\"addQuestion()\">\n            <i class=\"fa fa-plus-circle green\"></i>\n            Add Question\n          </span>\n         <!--  <span class=\"pointer mr-2\" @click=\"addQuestion()\">\n            <i class=\"fa fa-plus-circle green\"></i>\n            Add Text Box\n          </span> -->\n          <b-button \n            class=\"mr-1 float-right bg-green white\"\n            variant=\"outline-secondary\"\n            size=\"sm\"\n            @click=\"saveSurvey()\"\n            >Save Survey\n          </b-button>\n          <hr />\n    </b-col>\n    <b-col v-if=\"selected == 'new' \" sm=\"12\">\n        <div id=\"newSurvey\">\n          <b-row>\n            <b-col sm=\"4\">\n              <b-form-group label=\"Survey Name:\" >\n                      <b-form-input\n                        v-model=\"surveyName\"\n                        type=\"text\"\n                        placeholder=\"Enter Survey Name...\"\n                      ></b-form-input>\n              </b-form-group>\n            </b-col>\n            <b-col sm=\"4\">\n              <b-form-group label=\"Survey Year:\" >\n                <b-form-select v-model=\"surveyTerm\" :options=\"priorYears\"></b-form-select>\n              </b-form-group>\n            </b-col>\n            <b-col sm=\"4\">\n              <b-form-group label=\"Survey Type:\" >\n                <b-form-select v-model=\"surveyType\" :options=\"surveyTypes\"></b-form-select>\n              </b-form-group>\n            </b-col>\n          </b-row>\n         <table id=\"evaluatorTable\" class=\"table table-bordered\">\n         <tbody>\n          <tr v-for=\"(x, index) in questions\">\n              <td>\n                <p class=\"question-text mb-0 p-1 tx-12 wt-600\">{{ x.text }}</p>\n                <b-form-group>\n                  <b-form-input\n                    v-model=\"x.text\"\n                    type=\"text\"\n                    placeholder=\"...\"\n                  ></b-form-input>\n                </b-form-group>\n                <span v-for=\"(i, index) in x.options\" class=\"mr-2\">\n                  <input type=\"radio\" disabled>\n                  <label class=\"ml-2 mr-2\">{{ index }}</label>\n                </span>\n                 <b-button size=\"sm\" variant=\"danger\" class=\"float-right mr-1\" @click=\"removeQuestion(x, index)\">Delete</b-button>\n              </td>\n          </tr>\n        </tbody>\n      </table>\n          <b-col sm=\"3\">\n         <!--  <b-form-input v-model=\"survey.name\"           :placeholder=\"survey.name\"></b-form-input>\n          <b-form-input v-model=\"survey.type\"           :placeholder=\"survey.type\"></b-form-input>\n          <b-form-input v-model=\"survey.date_created\"   :placeholder=\"survey.date_created\"></b-form-input>\n          <b-form-input v-model=\"survey.date_modified\"  :placeholder=\"survey.date_modified\"></b-form-input>\n          <b-form-input v-model=\"survey.term\"           :placeholder=\"survey.term\"></b-form-input> -->\n        </b-col>\n         <b-col sm=\"12\"></b-col>\n        </div>\n      </b-col>\n      <b-col v-if=\"selected == 'historical' \" sm=\"8\">\n        <label v-if=\"survey.name != null\">\n           <!--  <b-button variant=\"primary\"   size=\"sm\" class=\"mr-1\">Choose  {{ survey.name }}</b-button>\n            <b-button variant=\"secondary\" size=\"sm\" class=\"mr-1\">Duplicate  {{ survey.name }}</b-button> -->\n        </label>\n        <p v-if=\"survey.name == null\" class=\"text-right\">\n          <!-- Choose exsisting survey <i class=\"fa fa-caret-right\"></i>  -->\n        </p>\n        <b-card id=\"surveyPreview\">\n          <h5>\n            {{ survey.name }}\n            {{ survey.type }}\n            {{ survey.term }}\n            {{ survey.date_modified }}\n          </h5>\n          <hr />\n           <div v-for=\"(x, index) in survey.questions\">\n                <p class=\"question-text mb-0 p-1 tx-12 wt-600\">{{ x.text }}</p>\n                <span v-for=\"(i, index) in x.options\" class=\"mr-2\">\n                  <input type=\"radio\" disabled>\n                  <label class=\"ml-2 mr-2\">{{ index }}</label>\n                </span>\n                <hr />\n          </div>\n        </b-card>\n      </b-col>\n      <b-col v-if=\"selected == 'historical' \" sm=\"4\">\n        <label>Saved Surveys</label>\n        <b-list-group>\n          <b-list-group-item  v-for=\"(x, index) in surveys\" class=\"pointer\" @click=\"chooseHistorial(x)\">\n            {{ x.name }}  <span class=\"float-right\">{{ x.term }}</span>\n          </b-list-group-item>\n        </b-list-group>\n      </b-col>\n    </b-row>\n\t</div>\n</template>\n\n<script>\n\n// USE JS DATE FUNCTION TO GET ARRAY OF YEARS\nconst currentYear = (new Date()).getFullYear();\nconst range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (_, i) => start + (i * step))\nconst API_URL = process.env.VUE_APP_API_URL\n\nexport default {\n\tname: 'surveyManagement',\n  props: [\"organization\",\"user\",\"candidates\",\"surveys\",\"faculty\"],\n  watch: {\n    surveys: function(newVal, oldVal) { \n       if(newVal) { \n        this.surveys = newVal\n       }\n    },\n    organization: function(newVal, oldVal) {\n      if(newVal) {\n        this.organization = newVal\n        let x\n        let terms = this.organization.terms\n        if(terms.length > 0) {\n          let yrs = []\n          for(x in terms) { yrs.push(terms[x].year) }\n          let max = yrs.reduce(function(a, b) {\n            return Math.max(a, b);\n          })\n          this.newestTerm = max\n        }\n        else {\n          this.newestTerm = (currentYear + 1)\n        }\n      }\n    }\n  },\n\tdata() {\n    \treturn {\n        surveyName: ' ',\n        surveyType: 'Pre-Interview',\n        surveyTerm: '2020',\n        surveyTerms: range(currentYear, currentYear - 50, -1),\n        surveyTypes : ['Pre-Interview', 'Interview'],\n        selected: 'new',\n        options: [\n          { text: 'Create New survey', value: 'new' },\n          { text: 'Historical Surveys', value: 'historical' },\n        ],\n        questions: [],\n        survey: {\n          \"Organization\"  : this.user.Organization,\n          \"term\"          : this.surveyTerm,  \n          \"type\"          : this.surveyType,  \n          \"name\"          : this.surveyName,\n          \"questions\"     : this.questions\n        },\n      }\n  \t},\n  computed: {\n    priorYears() {\n        let x\n        let terms = this.organization.terms\n        let years = []\n        for(x in terms) { \n          years.push(terms[x].year) }\n        return years\n      },\n  },\n  methods: {\n    getSurveys() {},\n    addQuestion() {\n      let x = {\n          text: '',\n          preview: false,\n          options: [0, 1, 2, 3, 4, 5],\n          selected: null,\n      }\n      this.questions.push(x)\n    },\n    saveSurvey() {\n      let input = {\n          Organization  : this.user.Organization,\n          term          : this.surveyTerm,  \n          type          : this.surveyType,  \n          name          : this.surveyName,\n          questions     : this.questions\n        }\n      window.axios.post(API_URL+'/survey/add', input)\n        .then(({data}) => {\n          this.surveys.push(data)\n        })\n        .catch(function (e) {\n          alert(e)\n          // alert(\"Error saving survey.\")\n        })\n    },\n    chooseHistorial(x) {\n      this.survey = x\n    },\n    removeQuestion(q, index) {\n      // AXIOS API CALL TO DELETE THEN()\n      this.questions.splice(index, 1)\n    },\n    moveQuestion(question, destination) {\n      console.log(question, destination)\n    }\n  }\n};\n</script>\n<style scoped lang=\"scss\"></style>"]}]}