{"remainingRequest":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/thread-loader/dist/cjs.js!/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/babel-loader/lib/index.js!/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Dashboard/admin/setup/importData.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/src/components/Dashboard/admin/setup/importData.vue","mtime":1587865625000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drewhyatt/projects/CandidateRank-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGgiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9kcmV3aHlhdHQvcHJvamVjdHMvQ2FuZGlkYXRlUmFuay1Gcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgY3VycmVudFllYXIgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7CnZhciBBUElfVVJMID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElfVVJMOwppbXBvcnQgdnVlMkRyb3B6b25lIGZyb20gJ3Z1ZTItZHJvcHpvbmUnOwppbXBvcnQgJ3Z1ZTItZHJvcHpvbmUvZGlzdC92dWUyRHJvcHpvbmUubWluLmNzcyc7Cgp2YXIgY3N2ID0gcmVxdWlyZSgnY3N2dG9qc29uJyk7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2ltcG9ydERhdGEnLAogIHByb3BzOiBbIm9yZ2FuaXphdGlvbiIsICJ1c2VyIiwgImNhbmRpZGF0ZXMiLCAic3VydmV5cyIsICJmYWN1bHR5Il0sCiAgd2F0Y2g6IHsKICAgIG9yZ2FuaXphdGlvbjogZnVuY3Rpb24gb3JnYW5pemF0aW9uKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGlmIChuZXdWYWwpIHsKICAgICAgICB0aGlzLm9yZ2FuaXphdGlvbiA9IG5ld1ZhbDsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpZWxkczogWydEYXRlJywgJ0ZpbGUgTmFtZScsICdVcGxvYWQgUHJvZ3Jlc3MnXSwKICAgICAgaW1wb3J0czogW10sCiAgICAgIGZpbGU6IG51bGwsCiAgICAgIGZpbGVBZGRlZDogbnVsbCwKICAgICAgeWVhcjogbnVsbCwKICAgICAgaGVhZGVyOiBudWxsLAogICAgICBzdGFnZWRDYW5kaWRhdGVzOiBbXSwKICAgICAgaGlkZURyb3Bab25lOiBmYWxzZSwKICAgICAgc2hvd1Jlc3VsdHM6IGZhbHNlLAogICAgICByZXN1bHRzOiBbXSwKICAgICAgZHJvcHpvbmVPcHRpb25zOiBfZGVmaW5lUHJvcGVydHkoewogICAgICAgIHVybDogJy9hcGkvdXBsb2FkJywKICAgICAgICBhdXRvUHJvY2Vzc1F1ZXVlOiBmYWxzZSwKICAgICAgICBhdXRvUXVldWU6IHRydWUsCiAgICAgICAgcGFyYWxsZWxVcGxvYWRzOiAxLAogICAgICAgIG1heEZpbGVzOiAxLAogICAgICAgIHVwbG9hZE11bHRpcGxlOiBmYWxzZSwKICAgICAgICBjcmVhdGVJbWFnZVRodW1ibmFpbHM6IGZhbHNlLAogICAgICAgIGFkZFJlbW92ZUxpbmtzOiBmYWxzZSwKICAgICAgICB0aW1lb3V0OiAzNjAwMDAsCiAgICAgICAgLy9taWxsaXNlY29uZHMKICAgICAgICAvLyBoZWFkZXJzOiB7CiAgICAgICAgLy8gICAgICAgIlgtQ1NSRi1UT0tFTiI6IGRvY3VtZW50LmhlYWQucXVlcnlTZWxlY3RvcigiW25hbWU9Y3NyZi10b2tlbl0iKS5jb250ZW50CiAgICAgICAgLy8gfSwKICAgICAgICBtYXhGaWxlc2l6ZTogMTAwMDAsCiAgICAgICAgY2h1bmtpbmc6IHRydWUsCiAgICAgICAgZm9yY2VDaHVua2luZzogdHJ1ZSwKICAgICAgICBjaHVua1NpemU6IDIwMDAwMDAKICAgICAgfSwgInVwbG9hZE11bHRpcGxlIiwgZmFsc2UpCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgdnVlRHJvcHpvbmU6IHZ1ZTJEcm9wem9uZQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHByaW9yWWVhcnM6IGZ1bmN0aW9uIHByaW9yWWVhcnMoKSB7CiAgICAgIHZhciB4OwogICAgICB2YXIgdGVybXMgPSB0aGlzLm9yZ2FuaXphdGlvbi50ZXJtczsKICAgICAgdmFyIHllYXJzID0gW107CgogICAgICBmb3IgKHggaW4gdGVybXMpIHsKICAgICAgICB5ZWFycy5wdXNoKHRlcm1zW3hdLnllYXIpOwogICAgICB9CgogICAgICByZXR1cm4geWVhcnM7CiAgICB9LAogICAgY2hlY2tIZWFkZXI6IGZ1bmN0aW9uIGNoZWNrSGVhZGVyKCkgewogICAgICByZXR1cm4gdGhpcy5oZWFkZXI7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sCiAgbWV0aG9kczogewogICAgcmVzZXRJbXBvcnQ6IGZ1bmN0aW9uIHJlc2V0SW1wb3J0KCkgewogICAgICB0aGlzLnN0YWdlZENhbmRpZGF0ZXMgPSBbXTsKICAgICAgdGhpcy5oZWFkZXIgPSBudWxsOwogICAgICB0aGlzLiRyZWZzLm15VnVlRHJvcHpvbmUucmVtb3ZlQWxsRmlsZXMoKTsKICAgICAgdGhpcy5oaWRlRHJvcFpvbmUgPSBmYWxzZTsKICAgICAgdGhpcy5zaG93UmVzdWx0cyA9IGZhbHNlOwogICAgfSwKICAgIHN0YXJ0SW1wb3J0OiBmdW5jdGlvbiBzdGFydEltcG9ydCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnllYXIgPT0gbnVsbCkgewogICAgICAgIGFsZXJ0KCdTZWxlY3QgYSB5ZWFyLicpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuc3RhZ2VkQ2FuZGlkYXRlcy5sZW5ndGggPT0gMCkgewogICAgICAgIGFsZXJ0KCdQbGVhc2UgVXBsb2FkIEEgQ1NWJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGMgPSBjb25maXJtKCdTdGFydCBpbXBvcnRpbmcgJyArIHRoaXMuc3RhZ2VkQ2FuZGlkYXRlcy5sZW5ndGggKyAnIGNhbmRpZGF0ZXMgZm9yIHRoZSB5ZWFyICcgKyB0aGlzLnllYXIpOwoKICAgICAgICBpZiAoYykgewogICAgICAgICAgdGhpcy4kUHJvZ3Jlc3Muc3RhcnQoKTsKICAgICAgICAgIHZhciBpOwoKICAgICAgICAgIGZvciAoaSBpbiB0aGlzLnN0YWdlZENhbmRpZGF0ZXMpIHsKICAgICAgICAgICAgLy8gQ0hFQ0sgRk9SIEVNUFRZIFZBTFVFUwogICAgICAgICAgICB2YXIgeCA9IHZvaWQgMDsKICAgICAgICAgICAgdmFyIGNvID0gdGhpcy5zdGFnZWRDYW5kaWRhdGVzW2ldOwoKICAgICAgICAgICAgZm9yICh4IGluIGNvKSB7CiAgICAgICAgICAgICAgaWYgKGNvW3hdID09ICIiIHx8IGNvW3hdID09IG51bGwpIHsKICAgICAgICAgICAgICAgIGNvW3hdID0gIm4vYSI7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IC8vIEFERCBSRVFVSVJFRCBEWU5BTU8gREIgVkFMVUVTIAoKCiAgICAgICAgICAgIHRoaXMuc3RhZ2VkQ2FuZGlkYXRlc1tpXVsnT3JnYW5pemF0aW9uJ10gPSB0aGlzLm9yZ2FuaXphdGlvbi5uYW1lOwogICAgICAgICAgICB0aGlzLnN0YWdlZENhbmRpZGF0ZXNbaV1bJ1JhbmstVGVybSddID0gdGhpcy55ZWFyOwogICAgICAgICAgICB0aGlzLnN0YWdlZENhbmRpZGF0ZXNbaV1bJ2ludGVydmlldyddID0gewogICAgICAgICAgICAgICdzdGF0dXMnOiAnaW5jb21wbGV0ZScKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdGhpcy5zdGFnZWRDYW5kaWRhdGVzW2ldWydzdXJ2ZXlfMSddID0gewogICAgICAgICAgICAgICdzdGF0dXMnOiAnaW5jb21wbGV0ZScKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdGhpcy5zdGFnZWRDYW5kaWRhdGVzW2ldWydzdXJ2ZXlfMiddID0gewogICAgICAgICAgICAgICdzdGF0dXMnOiAnaW5jb21wbGV0ZScKICAgICAgICAgICAgfTsKICAgICAgICAgIH0KICAgICAgICB9IC8vIGF4aW9zIHBvc3QgdG8gYXBpIAoKCiAgICAgICAgd2luZG93LmF4aW9zLnBvc3QoQVBJX1VSTCArICcvY2FuZGlkYXRlL2FkZC8nICsgdGhpcy5vcmdhbml6YXRpb24ubmFtZSwgdGhpcy5zdGFnZWRDYW5kaWRhdGVzKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgICAgICAgIGFsZXJ0KCJDYW5kaWRhdGVzIEltcG9ydGVkIFN1Y2Nlc3NmdWxseSIpOwogICAgICAgICAgX3RoaXMucmVzdWx0cyA9IGRhdGE7CiAgICAgICAgICBfdGhpcy5zaG93UmVzdWx0cyA9IHRydWU7CgogICAgICAgICAgX3RoaXMuJFByb2dyZXNzLmZpbmlzaCgpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICB0aGlzLiRQcm9ncmVzcy5mYWlsKCk7CiAgICAgICAgICBhbGVydChlKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGNob29zZUZpbGU6IGZ1bmN0aW9uIGNob29zZUZpbGUoKSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImRyb3B6b25lIilbMF0uY2xpY2soKTsKICAgIH0sCiAgICBwcm9jZXNzUXVldWU6IGZ1bmN0aW9uIHByb2Nlc3NRdWV1ZSgpIHsKICAgICAgdGhpcy4kcmVmcy5teVZ1ZURyb3B6b25lLnByb2Nlc3NRdWV1ZSgpOwogICAgfSwKICAgIHZmaWxlQWRkZWQ6IGZ1bmN0aW9uIHZmaWxlQWRkZWQoZmlsZSkgewogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICB0aGlzLmZpbGUgPSBmaWxlOwogICAgICB0aGlzLmZpbGVBZGRlZCA9IHRydWU7CiAgICAgIHZhciBmaWxlQ2hlY2sgPSBmaWxlLm5hbWUuZW5kc1dpdGgoJy5jc3YnKTsKCiAgICAgIGlmIChmaWxlQ2hlY2spIHsKICAgICAgICB0aGlzLmhpZGVEcm9wWm9uZSA9IHRydWU7CiAgICAgICAgdmFyIGkgPSB7CiAgICAgICAgICAiZGF0ZSI6ICcnLAogICAgICAgICAgIm5hbWUiOiBmaWxlLm5hbWUsCiAgICAgICAgICAicHJvZ3Jlc3MiOiBmaWxlLnByb2dyZXNzCiAgICAgICAgfTsKICAgICAgICB0aGlzLmltcG9ydHMucHVzaChpKTsKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgdmFyIHN0cmluZyA9IGV2ZW50LnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICBjc3YoKS5mcm9tU3RyaW5nKHN0cmluZykub24oJ2hlYWRlcicsIGZ1bmN0aW9uIChoZWFkZXIpIHsKICAgICAgICAgICAgdm0uaGVhZGVyID0gaGVhZGVyOwogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoanNvbk9iaikgewogICAgICAgICAgICB2bS5zdGFnZWRDYW5kaWRhdGVzID0ganNvbk9iajsKICAgICAgICAgIH0pOwogICAgICAgIH07CgogICAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudmFsaWRaaXAgPSBudWxsOwogICAgICAgIHRoaXMuJHJlZnMubXlWdWVEcm9wem9uZS5yZW1vdmVGaWxlKGZpbGUpOwogICAgICAgIGFsZXJ0KCJOb3QgYSB2YWxpZCB1cGxvYWQgZmlsZS4iKTsKICAgICAgfQogICAgfSwKICAgIHNlbmRpbmdFdmVudDogZnVuY3Rpb24gc2VuZGluZ0V2ZW50KGZpbGUsIHhociwgZm9ybURhdGEpIHt9LAogICAgdnN1Y2Nlc3M6IGZ1bmN0aW9uIHZzdWNjZXNzKGZpbGUsIHJlc3BvbnNlKSB7fSwKICAgIHZsb2dQcm9ncmVzczogZnVuY3Rpb24gdmxvZ1Byb2dyZXNzKGZpbGUsIHByb2dyZXNzLCBieXRlc1NlbnQpIHt9CiAgfQp9Ow=="},{"version":3,"sources":["importData.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div class=\"container-fluid\">  \n\t\t<b-row>\n      <!-- <h5>Automate Uplaod</h5> -->\n      <b-col sm=\"6\">\n         <label class=\"tx-12 wt-600 dark-gray\">Choose Year:</label>\n            <b-form-select v-model=\"year\" :options=\"priorYears\"></b-form-select>\n      </b-col>\n      <b-col sm=\"3\"></b-col>\n      <b-col sm=\"3\" class=\"pt-2\">\n        <b-button variant=\"primary\" size=\"sm\" class=\"float-right mt-4 mr-1\" @click=\"startImport()\">Start Import</b-button>\n        <b-button variant=\"danger\" size=\"sm\" class=\"float-right mt-4 mr-1\" @click=\"resetImport()\">Clear</b-button>\n      </b-col>\n      <b-col sm=\"12\">\n          <hr />\n          <table id=\"\" class=\"table table-bordered table-hover\" :class=\"{'d-none': !showResults}\">\n           <thead>\n              <tr>\n                <th scope=\"col\">Import Results</th>\n              </tr>\n            </thead>\n             <tbody>\n              <tr v-for=\"(x, index) in results\">\n                  <td> {{ x['Last Name'] }}, {{ x['First Name'] }} </td>\n              </tr>\n            </tbody>\n          </table>\n        <!-- <h5>Manual Upload</h5> -->\n        <vue-dropzone \n          ref=\"myVueDropzone\" \n          id=\"dropzone\" \n          class=\"mb-4\"\n          :class=\"{'d-none': hideDropZone}\" \n          @vdropzone-file-added=\"vfileAdded\"\n          @vdropzone-success=\"vsuccess\"\n          @vdropzone-upload-progress=\"vlogProgress\"\n          v-on:vdropzone-sending=\"sendingEvent\"\n          :options=\"dropzoneOptions\"\n          :useCustomSlot=\"true\"\n          :duplicateCheck=\"true\"\n        >\n          <div class=\"dropzone-custom-content mt-2 text-center\">\n            <span class=\"fa-stack fa-4x\">\n              <i class=\"fa fa-circle fa-stack-2x light-gray\"></i>\n              <i class=\"fa fa-upload fa-stack-1x white\"></i>\n            </span>\n            <p class=\"text-center tx-14 wt-500\">Drag and drop a file you want to upload</p>\n            <span class=\"btn btn-primary btn-sm\">Select File</span>\n          </div>\n        </vue-dropzone>\n      </b-col>\n      <b-col sm=\"6\">\n        <label class=\"tx-18 wt-600 dark-gray\">Candidate Fields</label>\n        <hr />\n        <ul class=\"candidate-fields\">\n           <li class=\"candidate-field\" v-for=\"(x, index) in header\">{{ x }}</li>\n        </ul>\n      </b-col>\n       <b-col sm=\"6\">\n        <label class=\"tx-18 wt-600 dark-gray\">Candidates {{ stagedCandidates.length }}</label>\n         <hr />\n         <p class=\"mb-0\" v-for=\"(x, index) in stagedCandidates\">\n          <i class=\"fa fa-user-circle gray\"></i> {{ x['Last Name'] }}, {{ x['First Name'] }} \n        </p>\n      </b-col>\n      </b-col>\n    </b-col>\n    </b-row>\n\t</div>\n</template>\n\n<script>\nconst currentYear = (new Date()).getFullYear();\nconst API_URL = process.env.VUE_APP_API_URL\n\nimport vue2Dropzone from 'vue2-dropzone'\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\nconst csv = require('csvtojson')\n\n\n\nexport default {\n\tname: 'importData',\n  props: [\"organization\",\"user\",\"candidates\",\"surveys\",\"faculty\"],\n  watch: {\n    organization: function(newVal, oldVal) {\n      if(newVal) {\n        this.organization = newVal\n      }\n    }\n  },\n\tdata() {\n    \treturn {\n        fields:['Date', 'File Name', 'Upload Progress'],\n        imports :[],\n        file: null,\n        fileAdded: null,\n        year: null,\n        header: null,\n        stagedCandidates: [],\n        hideDropZone: false,\n        showResults: false,\n        results: [],\n        dropzoneOptions: {\n          url: '/api/upload',\n          autoProcessQueue: false,\n          autoQueue: true,\n          parallelUploads: 1,\n          maxFiles: 1,\n          uploadMultiple: false,\n          createImageThumbnails: false,\n          addRemoveLinks: false,\n          timeout: 360000, //milliseconds\n          // headers: {\n          //       \"X-CSRF-TOKEN\": document.head.querySelector(\"[name=csrf-token]\").content\n          // },\n          maxFilesize: 10000,\n          chunking: true,\n          forceChunking: true,\n          chunkSize: 2000000,\n          uploadMultiple: false\n        },\n      }\n  \t},\n\tcomponents: {\n    \tvueDropzone: vue2Dropzone\n  \t},\n  computed: {\n   priorYears() {\n        let x\n        let terms = this.organization.terms\n        let years = []\n        for(x in terms) { \n          years.push(terms[x].year) }\n        return years\n    },\n    checkHeader() {\n      return this.header\n    }\n  },\n  mounted() {},\n  \tmethods: {\n      resetImport() {\n        this.stagedCandidates = []\n        this.header = null\n        this.$refs.myVueDropzone.removeAllFiles()\n        this.hideDropZone = false\n        this.showResults = false\n      },\n      startImport() {\n        if(this.year ==  null) {\n          alert('Select a year.')\n        }\n        else if(this.stagedCandidates.length == 0) { \n          alert('Please Upload A CSV')\n        }\n        else {\n          let c = confirm('Start importing '+this.stagedCandidates.length+' candidates for the year '+this.year)\n          if(c) {\n            this.$Progress.start()\n            let i \n            for(i in this.stagedCandidates) {\n              // CHECK FOR EMPTY VALUES\n              let x\n              let co = this.stagedCandidates[i]\n              for(x in co) { if( co[x] == \"\" || co[x] == null) { co[x] = \"n/a\" } }\n                // ADD REQUIRED DYNAMO DB VALUES \n                this.stagedCandidates[i]['Organization']  = this.organization.name\n                this.stagedCandidates[i]['Rank-Term']      = this.year\n                this.stagedCandidates[i]['interview']      = { 'status' : 'incomplete' }\n                this.stagedCandidates[i]['survey_1']       = { 'status' : 'incomplete' }\n                this.stagedCandidates[i]['survey_2']      = { 'status' : 'incomplete' }\n              }\n            }\n            // axios post to api \n            window.axios.post(API_URL+'/candidate/add/'+this.organization.name,  this.stagedCandidates)\n            .then(({data}) => { \n              alert(\"Candidates Imported Successfully\")\n              this.results = data\n              this.showResults = true\n              this.$Progress.finish()\n            })\n            .catch(function (e) { \n              this.$Progress.fail()\n              alert(e) \n            })\n        } \n      },\n      chooseFile() {\n        document.getElementsByClassName(\"dropzone\")[0].click();\n      },\n      processQueue() {\n          this.$refs.myVueDropzone.processQueue()\n      },\n      vfileAdded(file) {\n        let vm = this\n        this.file = file\n        this.fileAdded = true\n        let fileCheck = file.name.endsWith('.csv')\n        if (fileCheck) {\n          this.hideDropZone = true\n          let i = {\n            \"date\" : '',\n            \"name\" : file.name,\n            \"progress\" : file.progress,\n          }\n          this.imports.push(i)\n          const reader = new FileReader();\n            reader.onload = function(event) {\n              let string = event.target.result\n              csv()\n                .fromString(string)\n                .on('header',(header)=>{\n                  vm.header = header\n\n                })\n                .then((jsonObj)=>{\n                  vm.stagedCandidates = jsonObj\n                })\n          }\n\n          reader.readAsText(file);\n\n        } else {\n            this.validZip = null\n            this.$refs.myVueDropzone.removeFile(file)\n            alert(\"Not a valid upload file.\")\n        }\n      },\n      sendingEvent (file, xhr, formData) {},\n      vsuccess(file, response) {},\n      vlogProgress(file, progress, bytesSent) {},\n    }\n};\n</script>\n<style scoped lang=\"scss\">\n  .candidate-fields { padding-inline-start: 0px; }\n  .candidate-field {\n    list-style: none;\n    display: block;\n    // font-size: 12px;\n    background-color: #f7f7f7;\n    padding: 10px;\n    margin: 5px; \n  }\n</style>"],"sourceRoot":"src/components/Dashboard/admin/setup"}]}